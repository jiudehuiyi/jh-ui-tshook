[{"D:\\社招项目\\jh-ui-tshook\\src\\index.tsx":"1","D:\\社招项目\\jh-ui-tshook\\src\\reportWebVitals.ts":"2","D:\\社招项目\\jh-ui-tshook\\src\\App.tsx":"3","D:\\社招项目\\jh-ui-tshook\\src\\components\\Button\\button.tsx":"4","D:\\社招项目\\jh-ui-tshook\\src\\components\\Icon\\icon.tsx":"5","D:\\社招项目\\jh-ui-tshook\\src\\components\\Menu\\menu.tsx":"6","D:\\社招项目\\jh-ui-tshook\\src\\components\\Menu\\components\\item.tsx":"7","D:\\社招项目\\jh-ui-tshook\\src\\components\\Menu\\components\\subMenu.tsx":"8","D:\\社招项目\\jh-ui-tshook\\src\\components\\Alert\\alert.tsx":"9","D:\\社招项目\\jh-ui-tshook\\src\\components\\Grid\\Col.tsx":"10","D:\\社招项目\\jh-ui-tshook\\src\\components\\Grid\\Row.tsx":"11","D:\\社招项目\\jh-ui-tshook\\src\\components\\Grid\\grid.tsx":"12","D:\\社招项目\\jh-ui-tshook\\src\\components\\Divider\\divider.tsx":"13","D:\\社招项目\\jh-ui-tshook\\src\\components\\Space\\space.tsx":"14","D:\\社招项目\\jh-ui-tshook\\src\\components\\Breadcrumb\\breadcrumb.tsx":"15","D:\\社招项目\\jh-ui-tshook\\src\\components\\_util\\devWarning.ts":"16","D:\\社招项目\\jh-ui-tshook\\src\\components\\_util\\reactNode.ts":"17","D:\\社招项目\\jh-ui-tshook\\src\\components\\Breadcrumb\\BreadcrumbItem.tsx":"18","D:\\社招项目\\jh-ui-tshook\\src\\components\\Breadcrumb\\BreadcrumbSeparator.tsx":"19","D:\\社招项目\\jh-ui-tshook\\src\\components\\PageHeader\\page-header.tsx":"20","D:\\社招项目\\jh-ui-tshook\\src\\components\\Pagination\\pagination.tsx":"21","D:\\社招项目\\jh-ui-tshook\\src\\components\\Steps\\steps.tsx":"22","D:\\社招项目\\jh-ui-tshook\\src\\components\\Progress\\progress.tsx":"23","D:\\社招项目\\jh-ui-tshook\\src\\components\\_util\\type.ts":"24","D:\\社招项目\\jh-ui-tshook\\src\\components\\Progress\\util.ts":"25","D:\\社招项目\\jh-ui-tshook\\src\\components\\Progress\\circle.tsx":"26","D:\\社招项目\\jh-ui-tshook\\src\\components\\Progress\\line.tsx":"27","D:\\社招项目\\jh-ui-tshook\\src\\components\\Progress\\steps.tsx":"28","D:\\社招项目\\jh-ui-tshook\\src\\components\\Radio\\radio.tsx":"29","D:\\社招项目\\jh-ui-tshook\\src\\components\\Radio\\radio-button.tsx":"30","D:\\社招项目\\jh-ui-tshook\\src\\components\\Radio\\radio-group.tsx":"31","D:\\社招项目\\jh-ui-tshook\\src\\components\\Checkbox\\checkbox.tsx":"32","D:\\社招项目\\jh-ui-tshook\\src\\components\\Checkbox\\checkbox-group.tsx":"33","D:\\社招项目\\jh-ui-tshook\\src\\components\\Switch\\switch.tsx":"34","D:\\社招项目\\jh-ui-tshook\\src\\components\\Rate\\rate.tsx":"35"},{"size":508,"mtime":1608456437879,"results":"36","hashOfConfig":"37"},{"size":425,"mtime":1608109138662,"results":"38","hashOfConfig":"37"},{"size":6654,"mtime":1618560381281,"results":"39","hashOfConfig":"37"},{"size":3436,"mtime":1612192031149,"results":"40","hashOfConfig":"37"},{"size":890,"mtime":1613749870200,"results":"41","hashOfConfig":"37"},{"size":3990,"mtime":1609582579179,"results":"42","hashOfConfig":"37"},{"size":1500,"mtime":1609580671399,"results":"43","hashOfConfig":"37"},{"size":2613,"mtime":1609581992770,"results":"44","hashOfConfig":"45"},{"size":3663,"mtime":1612323632017,"results":"46","hashOfConfig":"37"},{"size":1338,"mtime":1612344283873,"results":"47","hashOfConfig":"37"},{"size":1131,"mtime":1612337762124,"results":"48","hashOfConfig":"37"},{"size":210,"mtime":1612344901042,"results":"49","hashOfConfig":"37"},{"size":1057,"mtime":1612404843037,"results":"50","hashOfConfig":"37"},{"size":3201,"mtime":1612409898629,"results":"51","hashOfConfig":"37"},{"size":4611,"mtime":1617716902193,"results":"52","hashOfConfig":"37"},{"size":229,"mtime":1616572968877,"results":"53","hashOfConfig":"37"},{"size":738,"mtime":1617716600254,"results":"54","hashOfConfig":"37"},{"size":1872,"mtime":1617764455950,"results":"55","hashOfConfig":"37"},{"size":372,"mtime":1617764625387,"results":"56","hashOfConfig":"37"},{"size":6159,"mtime":1617956004598,"results":"57","hashOfConfig":"37"},{"size":4600,"mtime":1618045561619,"results":"58","hashOfConfig":"37"},{"size":2340,"mtime":1618284187719,"results":"59","hashOfConfig":"37"},{"size":5550,"mtime":1618218555513,"results":"60","hashOfConfig":"37"},{"size":135,"mtime":1618123867684,"results":"61","hashOfConfig":"37"},{"size":912,"mtime":1618216291636,"results":"62","hashOfConfig":"37"},{"size":2854,"mtime":1618238706845,"results":"63","hashOfConfig":"37"},{"size":3188,"mtime":1618238824368,"results":"64","hashOfConfig":"37"},{"size":1456,"mtime":1618536314103,"results":"65","hashOfConfig":"37"},{"size":3044,"mtime":1618387263791,"results":"66","hashOfConfig":"37"},{"size":3398,"mtime":1618418868404,"results":"67","hashOfConfig":"37"},{"size":3867,"mtime":1618457002726,"results":"68","hashOfConfig":"37"},{"size":2459,"mtime":1618475801372,"results":"69","hashOfConfig":"37"},{"size":1572,"mtime":1618475817775,"results":"70","hashOfConfig":"37"},{"size":2294,"mtime":1618558072880,"results":"71","hashOfConfig":"37"},{"size":1415,"mtime":1618563473330,"results":"72","hashOfConfig":"37"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},"y3aesh",{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"75"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"75"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"75"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},"1fidxgy",{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"75"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"75"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"75"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"75"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"75"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"75"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"75"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"75"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"75"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"75"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"75"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"75"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"75"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"75"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\社招项目\\jh-ui-tshook\\src\\index.tsx",[],["162","163"],"D:\\社招项目\\jh-ui-tshook\\src\\reportWebVitals.ts",[],"D:\\社招项目\\jh-ui-tshook\\src\\App.tsx",["164","165","166","167"],"import React, {useState } from 'react';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport {  fas } from '@fortawesome/free-solid-svg-icons'\n\n\nimport Button from \"./components/Button/button\";\nimport Icon from \"./components/Icon/icon\";\nimport Menu from \"./components/Menu/menu\";\nimport Item from \"./components/Menu/components/item\";\nimport SubMenu from \"./components/Menu/components/subMenu\";\nimport Alert from \"./components/Alert/alert\";\n\nimport Row from \"./components/Grid/Row\";\nimport Col from \"./components/Grid/Col\";\nimport Grid from \"./components/Grid/grid\";\nimport Divider from \"./components/Divider/divider\";\nimport Space from \"./components/Space/space\";\n\nimport Breadcrumb from \"./components/Breadcrumb/breadcrumb\";\nimport BreadcrumbItem from \"./components/Breadcrumb/BreadcrumbItem\";\nimport PageHeader from \"./components/PageHeader/page-header\";\nimport Pagination from \"./components/Pagination/pagination\";\nimport Steps from \"./components/Steps/steps\";\nimport Progress from \"./components/Progress/progress\";\nimport Radio from \"./components/Radio/radio\";\nimport RadioButton from \"./components/Radio/radio-button\";\nimport RadioGroup from \"./components/Radio/radio-group\";\nimport Checkbox from \"./components/Checkbox/checkbox\";\nimport CheckboxGroup from \"./components/Checkbox/checkbox-group\";\nimport Switch from \"./components/Switch/switch\";\nimport Rate from \"./components/Rate/rate\";\nlibrary.add( fas );//添加所有种类的图标(不用一个个的进行引入)\n\nconst { Step } = Steps;\n\nfunction App() {\n\n \n  const routes = [\n    {\n      path: 'index',\n      breadcrumbName: 'First-level Menu',\n    },\n    {\n      path: 'first',\n      breadcrumbName: 'Second-level Menu',\n    },\n    {\n      path: 'second',\n      breadcrumbName: 'Third-level Menu',\n    },\n  ];\n  const options = [\n    { label: 'Apple', value: 'Apple' },\n    { label: 'Pear', value: 'Pear' },\n    { label: 'Orange', value: 'Orange' },\n  ];\n  const [switchChecked, setSwitchChecked] = useState(false)\n\n  const handleChange = (checked) => {\n    setSwitchChecked(!switchChecked);\n  }\n\n  return (\n    <div className=\"App\">\n       \n      <Button>原始按钮</Button>\n      <Pagination></Pagination>\n      <Progress steps={5} percent={40}></Progress>\n      <Progress  percent={40} status=\"exception\" ></Progress>\n      <Steps current={2}>\n        <Step title=\"111\"></Step>\n        <Step title=\"2222\"></Step>\n        <Step title=\"333\"></Step>\n        <Step title=\"444\"></Step>\n      </Steps>\n\n      <RadioGroup></RadioGroup>\n      <RadioGroup>\n        <Radio >Radio1</Radio>\n        <Radio >Radio2</Radio>\n      </RadioGroup>\n\n      <RadioGroup name=\"ccc\" size=\"large\" options={options}>\n        <RadioButton >Radio-button1</RadioButton>\n        <RadioButton>Radio-button2</RadioButton>\n      </RadioGroup>\n\n      <CheckboxGroup name=\"aa\">\n        <Checkbox>1111</Checkbox>\n        <Checkbox>2222</Checkbox>\n      </CheckboxGroup>\n\n      <Switch   \n        defaultChecked={true}\n        checkedChildren=\"开启\" \n        unCheckedChildren=\"关闭\" \n      />\n      <Rate />\n\n\n      <PageHeader  title=\"PageHeader\" subTitle={\"subTitle\"} tags={\"tags\"} extra={[<span>111</span>,<span>2222</span>]} ghost={true} breadcrumb={{ \"routes\":routes }}  ></PageHeader>\n      <Breadcrumb  routes={[\n          {\n            path: 'search/products',\n            breadcrumbName: '搜索'\n          },\n          {\n            path: 'goods-details',\n            breadcrumbName: '商品详情'\n          },\n        ]}>\n        <BreadcrumbItem>1111</BreadcrumbItem>\n        <BreadcrumbItem>222</BreadcrumbItem>\n        <BreadcrumbItem>333</BreadcrumbItem>\n      </Breadcrumb>\n      <Icon \n        icon='coffee' \n        theme=\"primary\"\n      />\n      <Row gutter={10}>\n        <Col span={8} >1111</Col>\n        <Col span={8} pull={3}>222</Col>\n        <Col span={8}>333</Col>\n      </Row>\n      <Grid.Row>\n        <Grid.Col>1111</Grid.Col>\n        <Grid.Col>1111</Grid.Col>\n        <Grid.Col>1111</Grid.Col>\n\n      </Grid.Row>\n      <Divider orientation=\"left\">Text</Divider>\n      <Divider orientation=\"right\">Text</Divider>\n\n      <Divider dashed={true}>\n      </Divider>\n\n      <Space \n        direction=\"vertical\"\n        // size=\"large\"\n        // size={100}\n        wrap={true}\n        split={ \"|\" }\n      >\n        <Button btnType=\"primary\">space1</Button>\n        <Button btnType=\"primary\">space2</Button>\n        <Button btnType=\"primary\">space3</Button>\n        <Button btnType=\"primary\">space4</Button>\n        <Button btnType=\"primary\">space1</Button>\n        <Button btnType=\"primary\">space2</Button>\n        <Button btnType=\"primary\">space3</Button>\n        <Button btnType=\"primary\">space4</Button>\n        <Button btnType=\"primary\">space1</Button>\n        <Button btnType=\"primary\">space2</Button>\n        <Button btnType=\"primary\">space3</Button>\n        <Button btnType=\"primary\">space4</Button>\n      </Space>\n\n      {/* <Menu \n        mode=\"vertical\"  \n        // mode=\"horizontal\"\n        style={{ width:\"200px\" }} \n        defaultOpenKeys={ [\"0\",\"1\"] }\n        openKeys={ [\"0\",\"2\"] }\n        defaultSelectedKeys=\"0-1\"\n      >\n        <SubMenu title=\"title1\" key=\"2222\">\n          <Item key={\"1\"} >1111</Item>\n          <Item danger={true} key={\"2\"}>2222</Item>\n          <Item disabled={true} key={\"3\"}>3333</Item>\n        </SubMenu>\n\n        <SubMenu title=\"title2\">\n          <Item key={\"1\"} >444</Item>\n          <Item danger={true} key={\"2\"}>5555</Item>\n          <Item disabled={true} key={\"3\"}>6666</Item>\n        </SubMenu>\n\n        <SubMenu title=\"title3\">\n          <Item key={\"1\"} >777</Item>\n          <Item danger={true} key={\"2\"}>888</Item>\n          <Item disabled={true} key={\"3\"}>999</Item>\n        </SubMenu>\n      </Menu> */}\n\n      <Alert  message=\"message\"  closable={true} onClose={ ()=>console.log(22222) } closeText=\"closeText\"  description=\"Error Description Error Description Error Description Error Description\"/>\n      <Alert type=\"success\"  message=\"message\" closeText=\"closeText\"  description=\"Error Description Error Description Error Description Error Description\" />\n      <Alert type=\"info\" message={\"info\" } loopMessage={[ \"aaa\",\"bbb\" ]} />\n      <Alert type=\"error\" message=\"message\" />\n\n     <Button btnType=\"default\" size=\"small\" danger={true} disabled={true}  shape=\"circle\">default</Button>\n     <Button btnType=\"primary\" size=\"middle\" danger={true} disabled={true} shape=\"round\"  >primary</Button>\n     <Button btnType=\"dashed\" size=\"large\">dashed</Button>\n     <Button btnType=\"text\">text</Button>\n     <Button btnType=\"ghost\">ghost</Button>\n     <Button btnType=\"link\">link</Button>\n\n    </div>\n  );\n}\n\nexport default App;\n","D:\\社招项目\\jh-ui-tshook\\src\\components\\Button\\button.tsx",["168"],"import React,{ useState } from \"react\";\r\nimport classnames from \"classnames\";\r\n\r\n\r\nexport type ButtonShape = \"circle\" | \"round\";\r\nexport type ButtonSize = \"large\" | \"middle\" | \"small\";\r\nexport type ButtonType = \"primary\" | \"ghost\" | \"dashed\" | \"link\" | \"text\" | \"default\";\r\nexport type ButtonHtmlType = \"submit\" | \"button\" | \"reset\";\r\n\r\n\r\ninterface BaseButtonProps {\r\n    className?:string;\r\n    block?:boolean;\r\n    danger?:boolean;\r\n    disabled?:boolean;\r\n    ghost?:boolean;\r\n    href?:string;\r\n    htmlType: ButtonHtmlType;\r\n    icon?:React.ReactNode;\r\n    loading?:boolean | { delay?:number };\r\n    shape?:ButtonShape;\r\n    size?:ButtonSize;\r\n    target?:string;\r\n    btnType?:ButtonType;\r\n    children?:React.ReactNode;\r\n    onClick?:()=>void;\r\n}\r\n\r\n//标签类型组合\r\nexport type AnchorButtonProps = BaseButtonProps & React.AnchorHTMLAttributes<HTMLElement>;\r\n//button标签组合\r\nexport type NativeButtonProps = BaseButtonProps & React.ButtonHTMLAttributes<HTMLButtonElement>\r\n//加Partial的原因是因为AnchorButtonProp和NativeButtonProps是可能发生类型冲突\r\nexport type ButtonProps = Partial<AnchorButtonProps & NativeButtonProps>;\r\n\r\nconst Button:React.FC<ButtonProps> = (props)=>{\r\n\r\n\r\n    const [clicked,setClicked] = useState<boolean>( false );\r\n\r\n    //解构属性\r\n    const {\r\n        className,block,danger,disabled,ghost,href,htmlType,icon,loading,shape,size,\r\n        btnType  ,children,...restProps\r\n    } = props;\r\n    const iconNode = typeof icon === \"string\" ?  icon : null;\r\n\r\n    //合并类名，为所传得属性调整为相应得样式,\r\n    //prefixCls为定义常规属性，className为外部传入的类名,{}则为传入的props属性需要改变对应的样式\r\n    const prefixCls = \"btn\";\r\n    const classes = classnames(prefixCls,className,{\r\n        [`btn-${btnType}`]:btnType,\r\n        [`btn-${size}`]:size,\r\n        [`btn-block`]:block,\r\n        [`btn-danger`]:danger,\r\n        [`btn-disabled`]:disabled,\r\n        [`btn-${shape}`]:shape\r\n    })\r\n\r\n    const handleClick:React.MouseEventHandler< HTMLButtonElement | HTMLAnchorElement  > = (e)=>{\r\n        //防止fast-click类似于fastclick.js\r\n        let timer\r\n        setClicked( true );\r\n        clearTimeout( timer  );\r\n        timer = window.setTimeout( ()=>setClicked(false),500 );\r\n\r\n        const onClick = props.onClick;\r\n        if( onClick ) {\r\n            (onClick as React.MouseEventHandler< HTMLButtonElement | HTMLAnchorElement > )(e);\r\n        }\r\n    }\r\n\r\n\r\n    //判断是a标签还是button标签\r\n    if(  btnType === \"link\" && href ) {\r\n        return (\r\n            <a\r\n                className={classes}\r\n                href={href}\r\n                onClick={ (ev)=>handleClick(ev) }\r\n                {...restProps}\r\n            >\r\n                {\r\n                    children\r\n                }\r\n            </a>\r\n        )\r\n    }else {\r\n        return (\r\n            <button\r\n                className={classes}\r\n                disabled={disabled}\r\n                type={ htmlType || \"button\" }\r\n                onClick={ (ev)=>handleClick(ev) }\r\n                {...restProps}\r\n            >\r\n               {iconNode} {children}\r\n            </button>\r\n        )\r\n    }  \r\n}\r\n\r\nButton.defaultProps = {\r\n    disabled:false,\r\n    btnType:\"default\",\r\n    size:\"middle\",\r\n    block:false,\r\n    danger:false,\r\n}\r\nButton.displayName=\"Button\";\r\n\r\nexport default Button;\r\n\r\n\r\n//暂缺loading\r\n\r\n\r\n\r\n\r\n","D:\\社招项目\\jh-ui-tshook\\src\\components\\Icon\\icon.tsx",[],"D:\\社招项目\\jh-ui-tshook\\src\\components\\Menu\\menu.tsx",[],"D:\\社招项目\\jh-ui-tshook\\src\\components\\Menu\\components\\item.tsx",["169"],"import React, { useContext } from \"react\";\r\nimport classnames from \"classnames\";\r\n\r\nimport { MenuContext,MenuContextProps } from \"../menu\";\r\n\r\nexport interface ItemProps{\r\n    danger:boolean,\r\n    disabled:boolean,\r\n    icon:React.ReactNode,\r\n    key:any,\r\n    title:string,\r\n    className:string,\r\n    style:React.CSSProperties,\r\n    index:string,\r\n\r\n}\r\n\r\n\r\nconst Item:React.FC< Partial<ItemProps> > = (props)=>{\r\n\r\n   \r\n    const {\r\n        danger,disabled,icon,key,title,className,style,index,children\r\n    } = props;\r\n    const context = useContext<MenuContextProps>( MenuContext );\r\n    const classes = classnames(\"menu-item\",className,{\r\n        [`menu-item-danger`]:danger,\r\n        [`menu-item-disabled`]:disabled,\r\n        [`menu-item-active`]:index ===  context.index,\r\n        // [`menu-item-selected`]: index ===  context.selectedKeys || index === context.defaultSelectedKeys, \r\n    })\r\n   \r\n    const handleClick = (ev:React.MouseEvent)=>{\r\n        if( !disabled  ) {\r\n            context?.onClick!( { item:children,key:index!,domEvent:ev } );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <li \r\n            key={key} \r\n            className={classes} \r\n            style={{  ...style }}\r\n            onClick={ (ev:React.MouseEvent)=>handleClick(ev) }\r\n        >\r\n            {icon}\r\n            {\r\n                children\r\n            }\r\n        </li>\r\n    )\r\n\r\n}\r\n\r\nItem.defaultProps = {\r\n    danger:false,\r\n    disabled:false\r\n}\r\nItem.displayName = \"MenuItem\";\r\n\r\nexport default Item;\r\n","D:\\社招项目\\jh-ui-tshook\\src\\components\\Menu\\components\\subMenu.tsx",[],["170","171"],"D:\\社招项目\\jh-ui-tshook\\src\\components\\Alert\\alert.tsx",["172"],"import React,{ useState,useCallback } from \"react\";\r\nimport classnames from \"classnames\";\r\nimport Icon from \"../Icon/icon\";\r\nimport TextLoop from 'react-text-loop';\r\n\r\ntype typeEnum = \"success\" | \"info\" | \"warning\" | \"error\";\r\n\r\ninterface IAlertProps {\r\n    action:React.ReactNode,\r\n    afterClose:()=>void,\r\n    closable:boolean,\r\n    closeText:React.ReactNode | string,\r\n    description:React.ReactNode | string,\r\n    icon:React.ReactNode,\r\n    message:React.ReactNode | string,\r\n    showIcon:boolean,\r\n    type:typeEnum,\r\n    onClose:( e:React.MouseEvent )=>void,\r\n    loopMessage:Array<string>,\r\n    style:React.CSSProperties,\r\n    className:string,\r\n}\r\nenum IconType  {\r\n    \"success\"=\"check-circle\",\r\n    \"info\"=\"exclamation-circle\",\r\n    \"warning\"=\"exclamation-circle\",\r\n    \"error\"=\"window-close\"\r\n}\r\nenum IconColor {\r\n    \"success\"=\"#52C41A\",\r\n    \"info\"=\"#1890FF\",\r\n    \"warning\"=\"#FAAD14\",\r\n    \"error\"=\"#FF4D4F\"\r\n}\r\n\r\nconst Alert:React.FC< Omit<Partial<IAlertProps>,\"message\"> & { message:string | React.ReactNode } > = (props)=>{\r\n\r\n\r\n    const [ closed,setClosed ] = useState<boolean>(false);\r\n\r\n    const closeComponent = useCallback((e:React.MouseEvent)=>{\r\n        setClosed( true );\r\n        const onClose = props.onClose;\r\n        ( onClose! as React.MouseEventHandler )?.( e );\r\n        const afterClose = props.afterClose;\r\n        afterClose?.();\r\n    },[])\r\n\r\n    const renderLoopMessage = (loopMessage:Array<string | undefined>)=>{\r\n        return loopMessage.map( (item:string | undefined,index:number)=>{\r\n            return (\r\n                <div key={ index }>\r\n                    {\r\n                        item\r\n                    }\r\n                </div>\r\n            )\r\n        } );\r\n    }\r\n\r\n    const { \r\n        className,style,message,type=\"warning\",\r\n        closable, description,showIcon,closeText,\r\n        loopMessage=[],\r\n    } = props;\r\n    const renderLoopMessageData = renderLoopMessage(loopMessage);\r\n    const classes = classnames( \"jh-alert\",className,{\r\n        [`jh-${type}`]:true,\r\n    } )\r\n    if( !!closed ) return null;\r\n    return  ( \r\n        <div\r\n            className={ classes }\r\n            style={{ ...style }}\r\n        >  \r\n            {\r\n                !!closable &&\r\n                (\r\n                    \r\n                closeText \r\n                ? <div \r\n                    className=\"jh-alert-closable\"\r\n                    onClick={ ( e )=>closeComponent(e) }\r\n                >{closeText}</div> \r\n                :<div \r\n                    className=\"jh-alert-closable\"\r\n                    onClick={ ( e )=>closeComponent(e) }\r\n                >\r\n                    <Icon  icon=\"times\" />\r\n                </div>\r\n                )\r\n            }\r\n            {\r\n                !!showIcon && \r\n                <Icon  icon={ IconType[type] }  style={{ color:IconColor[type] }}/> \r\n            }\r\n            <div>\r\n            </div>\r\n            <div>\r\n                \r\n                {\r\n                     renderLoopMessageData.length > 0 \r\n                     ? (\r\n                         <TextLoop mask>\r\n                             {\r\n                                 renderLoopMessageData.map( (item)=>{\r\n                                     return item\r\n                                 } )\r\n                             }\r\n                         </TextLoop>\r\n                     )\r\n                     :message                   \r\n                }\r\n            </div>\r\n            <div>\r\n                {\r\n                    description\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nAlert.displayName = \"Alert\";\r\nexport default Alert;\r\n","D:\\社招项目\\jh-ui-tshook\\src\\components\\Grid\\Col.tsx",["173"],"import React,{ useContext,useMemo } from \"react\";\r\nimport classnames from \"classnames\";\r\nimport { RowContext } from \"./Row\";\r\ninterface ICol {\r\n    flex:string | number,\r\n    className:string,\r\n    style:React.CSSProperties,\r\n    offset:number,\r\n    order:number,\r\n    pull:number,\r\n    push:number,\r\n    span:number,\r\n    xs:number | object,\r\n    sm:number | object,\r\n    md:number | object,\r\n    lg:number | object,\r\n    xl:number | object,\r\n    xxl:number | object,\r\n\r\n}\r\n\r\nconst Col:React.FC< Partial<ICol> > = ( props )=>{\r\n\r\n\r\n\r\n    const {\r\n        style,className,span,offset = 0,order=0,push=0,pull=0,children\r\n    } = props;\r\n    const classes = classnames(\"jh-col\",className,{\r\n        [`jh-span-${span}`]:true,\r\n        [`jh-offset-${offset}`]:true,\r\n        [`jh-push-${push}`]:true,\r\n        [`jh-pull-${pull}`]:true\r\n    });\r\n    const { gutter } = useContext( RowContext );   \r\n    let colStyle = useMemo( ()=>{\r\n        return gutter! > 0 ?  { paddingLeft:(gutter!)/2,paddingRight:(gutter!)/2,...style } : style;\r\n    },[gutter] );  \r\n\r\n    return (\r\n            <div\r\n                className={ classes }\r\n                style={{ ...colStyle,order:order }}\r\n            >\r\n                {\r\n                    children\r\n                }\r\n            </div>\r\n    )\r\n}\r\n\r\nCol.displayName = \"Col\";\r\nexport default Col;","D:\\社招项目\\jh-ui-tshook\\src\\components\\Grid\\Row.tsx",[],"D:\\社招项目\\jh-ui-tshook\\src\\components\\Grid\\grid.tsx",["174"],"import React from \"react\";\r\nimport Row from \"./Row\";\r\nimport Col from \"./Col\";\r\nconst Grid = ()=>{\r\n    return null\r\n}\r\n\r\nGrid.Row = Row;\r\nGrid.Col = Col;\r\nGrid.displayName = \"Grid\";\r\nexport default Grid;\r\n\r\n\r\n","D:\\社招项目\\jh-ui-tshook\\src\\components\\Divider\\divider.tsx",[],"D:\\社招项目\\jh-ui-tshook\\src\\components\\Space\\space.tsx",["175"],"import React from \"react\";\r\nimport classnames from \"classnames\";\r\n\r\ntype TAlign = \"start\" | \"end\" | \"center\" | \"baseline\";\r\ntype TDirection = \"vertical\" | \"horizontal\";\r\ntype TSize = \"small\" | \"middle\" | \"large\";\r\ninterface ISpaceProp  {\r\n    align:TAlign,\r\n    direction:TDirection,\r\n    size:TSize | number,\r\n    split:React.ReactNode,\r\n    wrap:boolean,\r\n    className:string,\r\n    style:React.CSSProperties\r\n}\r\ninterface IMarginRight{\r\n    marginRight:string,\r\n    marginBottom?:string,\r\n}\r\ninterface IMarginBottom {\r\n    marginBottom:string\r\n}\r\n\r\n\r\n\r\nconst Space:React.FC< Partial<ISpaceProp> > = (props)=>{\r\n\r\n    const { align,direction=\"horizontal\",size=\"small\",split,wrap=false,className,style,children } = props;\r\n    const classes = classnames(\"jh-space\",className,{\r\n        [`jh-space-${direction}`]:true,\r\n        [`jh-space-${size}`]:true,\r\n        [`jh-space-${align}`]:true,\r\n        [`jh-space-wrap`]: wrap && direction === \"horizontal\"\r\n    })\r\n\r\n    const renderChildren = ()=>{\r\n        return React.Children.map( props.children,(child,index)=>{\r\n            let childElement = child;\r\n            let sizeType = typeof parseInt(size as any,10);\r\n            let spaceItemStyle = {};\r\n            if( sizeType === \"number\" ) {\r\n                if( direction === \"horizontal\" ) {\r\n                    ( spaceItemStyle as  IMarginRight)[\"marginRight\"] = size + \"px\";\r\n                    ( spaceItemStyle as  IMarginRight)[\"marginBottom\"] = wrap ? 8 + \"px\":\"0px\";\r\n                }else if( direction === \"vertical\" ){\r\n                    ( spaceItemStyle as IMarginBottom )[\"marginBottom\"] = size + \"px\";\r\n                }else {\r\n                    console.error(\"size property only exist 'horizontal' or 'vertical' \");\r\n                }\r\n            }else {\r\n                console.error(\"size support only string or number \");\r\n            }\r\n            if( childElement ) {\r\n                return React.cloneElement(\r\n                    childElement as any,\r\n                    { className:`jh-space-item jh-space-${size}`,style:spaceItemStyle}\r\n                )\r\n            }else {\r\n                console.error(\"Space component must exist children\");\r\n            }\r\n\r\n        } );\r\n    }\r\n    return (\r\n        <div\r\n            style={{ ...style }}\r\n            className={ classes }\r\n        >\r\n            {\r\n               split ? renderChildren()!.map( (item,index)=>{\r\n                    return (\r\n                        <div key={index}>\r\n                            {item}\r\n                            {\r\n                               direction===\"horizontal\" ? (\r\n                                <span className={`jh-space-split-${size}`}>{split}</span>\r\n                               ) :(\r\n                                   <div  className={`jh-space-split-vertical-${size}`} >{split}</div>\r\n                               )\r\n                            }\r\n                            \r\n                        </div>\r\n                    )\r\n                } ) : renderChildren()\r\n            }\r\n            {/* {\r\n                renderChildren()\r\n            } */}\r\n        </div>\r\n    )\r\n}\r\n\r\nSpace.displayName = \"Space\";\r\nexport default Space;","D:\\社招项目\\jh-ui-tshook\\src\\components\\Breadcrumb\\breadcrumb.tsx",[],"D:\\社招项目\\jh-ui-tshook\\src\\components\\_util\\devWarning.ts",["176"],"import devWarning,{ resetWarned } from \"rc-util/lib/warning\";\r\n\r\nexport { resetWarned };\r\n\r\nexport default (valid: boolean, component: string, message: string): void => {\r\n    devWarning(valid, `[jh: ${component}] ${message}`)\r\n}","D:\\社招项目\\jh-ui-tshook\\src\\components\\_util\\reactNode.ts",[],"D:\\社招项目\\jh-ui-tshook\\src\\components\\Breadcrumb\\BreadcrumbItem.tsx",[],"D:\\社招项目\\jh-ui-tshook\\src\\components\\Breadcrumb\\BreadcrumbSeparator.tsx",[],"D:\\社招项目\\jh-ui-tshook\\src\\components\\PageHeader\\page-header.tsx",[],"D:\\社招项目\\jh-ui-tshook\\src\\components\\Pagination\\pagination.tsx",["177","178","179","180"],"import React from \"react\";\r\nimport RcPagination from \"rc-pagination\";\r\nimport classnames from \"classnames\";\r\nimport Icon from \"../Icon/icon\";\r\nexport interface PaginationProps {\r\n    current?: number;\r\n    defaultCurrent?: number;\r\n    defaultPageSize?: number;\r\n    disabled?: boolean;\r\n    hideOnSinglePage?: boolean;\r\n    itemRender?: (\r\n        page?: number,\r\n        type?: \"page\" | \"prev\"  | 'next' | 'jump-prev' | 'jump-next',\r\n        originalElement?: React.ReactNode\r\n    ) => React.ReactNode;\r\n    pageSize?: number;\r\n    pageSizeOptions?: Array<string>;\r\n    responsive?: boolean;\r\n    showLessItems?: boolean;\r\n    showQuickJumper?: boolean | {goButton?: React.ReactNode};\r\n    showSizeChanger?: boolean;\r\n    showTitle?: boolean;\r\n    simple?: boolean;\r\n    size?: \"default\" | \"small\";\r\n    total?: number;\r\n    onChange?: (page?: number, pageSize?: number) => void;\r\n    onShowSizeChange?: (current: number, size: number) => void; \r\n    className?: string;\r\n    style?: React.CSSProperties;\r\n    prefixCls?: string;\r\n    prevIcon?: React.ReactNode;\r\n    nextIcon?: React.ReactNode;\r\n    jumpPrevIcon?: React.ReactNode;\r\n    jumpNextIcon?: React.ReactNode;\r\n    showAngleDouble?: boolean;\r\n    showPrevNextJumpers?:boolean;\r\n    showTotal?: (total: number, origin:[number, number]) => void;\r\n}\r\n\r\nconst Pagination:React.FC<PaginationProps> = (props) => {\r\n\r\n    const {\r\n        prefixCls= \"jh-pagination\", style, className,\r\n    } = props;\r\n\r\n    const getIcons = () => {\r\n        const ellipsis = <span className={`${prefixCls}-item-ellipsis`}>•••</span>\r\n        let prevIcon = (\r\n            <button className={`${prefixCls}-item-link`} type=\"button\">\r\n                {props.prevIcon || <Icon icon=\"angle-left\" />}\r\n            </button>\r\n        )\r\n        let nextIcon = (\r\n            <button className={`${prefixCls}-item-link`} type=\"button\">\r\n                {props.nextIcon || <Icon icon=\"angle-right\" />}\r\n            </button>\r\n        )\r\n        let jumpPrevIcon = (\r\n            <a className={`${prefixCls}-item-link`}>\r\n                <div className={`${prefixCls}-item-container`}>\r\n                    {\r\n                        props.showAngleDouble ? \r\n                        (\r\n                            props.jumpPrevIcon || <Icon icon=\"angle-double-left\" className={`${prefixCls}-item-link-icon`} />\r\n                        ):(\r\n                            ellipsis\r\n                        )\r\n                    }\r\n                </div>\r\n            </a>\r\n        )\r\n        let jumpNextIcon = (\r\n            <a className={`${prefixCls}-item-link`}>\r\n                <div className={`${prefixCls}-item-container`}>\r\n                    {\r\n                        props.showAngleDouble ? \r\n                        (\r\n                            props.jumpNextIcon || <Icon icon=\"angle-double-right\" className={`${prefixCls}-item-link-icon`} />\r\n                        ):(\r\n                            ellipsis\r\n                        )\r\n                    }\r\n                </div>\r\n            </a>\r\n        )\r\n\r\n        return {\r\n            prevIcon,\r\n            nextIcon,\r\n            jumpPrevIcon,\r\n            jumpNextIcon\r\n        }\r\n        \r\n    }\r\n\r\n    const renderPagination = () => {\r\n        const classNames = classnames(\r\n            className,\r\n        )\r\n        const { \r\n            disabled, defaultCurrent = 1, current, total= 0, defaultPageSize=10,\r\n            pageSize=10,onChange, showSizeChanger, pageSizeOptions=[\"10\", \"20\",\"50\"],onShowSizeChange,\r\n            hideOnSinglePage=false,showPrevNextJumpers=true,showQuickJumper=false,\r\n            showTotal\r\n         } = props;\r\n        return (\r\n            <RcPagination \r\n                className={classNames}\r\n                style={style}\r\n                prefixCls={prefixCls}\r\n                defaultCurrent={defaultCurrent}\r\n                current = {current}\r\n                total={total}\r\n                defaultPageSize={defaultPageSize}\r\n                pageSize={pageSize}\r\n                onChange={onChange}\r\n                showSizeChanger={showSizeChanger}\r\n                pageSizeOptions={pageSizeOptions}\r\n                onShowSizeChange={onShowSizeChange}\r\n                hideOnSinglePage={hideOnSinglePage}\r\n                showPrevNextJumpers={showPrevNextJumpers}\r\n                showQuickJumper={showQuickJumper}\r\n                {...getIcons()}\r\n            />\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                renderPagination()\r\n            }\r\n        </div>\r\n    )\r\n};\r\nexport default Pagination;\r\n\r\n","D:\\社招项目\\jh-ui-tshook\\src\\components\\Steps\\steps.tsx",["181"],"import React from \"react\";\r\nimport RCSteps from \"rc-steps\";\r\nimport omit from 'rc-util/lib/omit';\r\nimport classnames from \"classnames\";\r\nimport Icon from \"../Icon/icon\";\r\nimport \"rc-steps/assets/index.css\";\r\nexport interface StepsProps {\r\n    type?:\"default\" | \"navigation\";\r\n    direction?: \"horizontal\" | \"vertical\";\r\n    current?: number;\r\n    initial?: number;\r\n    size?: 'default' | 'small';\r\n    labelPlacement?: 'horizontal' | 'vertical';\r\n    status?: \"error\" | \"process\" | \"finish\" | \"wait\";\r\n    icons?: {finish?:React.ReactNode, error?: React.ReactNode}\r\n    onChange?: (current: number) => void;\r\n    className?: string;\r\n    percent?: number;\r\n    style?: React.CSSProperties;\r\n}\r\nexport interface StepProps {\r\n    title?: React.ReactNode;\r\n    subTitle?: React.ReactNode;\r\n    description?: React.ReactNode;\r\n    icon?: React.ReactNode;\r\n    status?: \"error\" | \"process\" | \"finish\" | \"wait\";\r\n    tailContent?: React.ReactNode;\r\n    disabled?: boolean;\r\n    className?: string;\r\n    style?: React.ReactNode;\r\n}\r\ninterface StepsType extends React.FC<StepsProps> {\r\n    Step: React.ComponentClass<any>\r\n    // Step: React.ClassicComponentClass<any>;\r\n}\r\n\r\nconst Steps: StepsType = (props) => {\r\n\r\n    const prefixCls = \"jh-steps\";\r\n    const { \r\n        style, className, direction = \"horizontal\", type=\"default\", initial = 0,\r\n        current = 0, size=\"small\", labelPlacement = \"horizontal\", status = \"wait\",\r\n        onChange = () => {}, children\r\n     } = props;\r\n     const icons = {\r\n        finish: <Icon icon={\"check-circle\"} theme=\"primary\" className={`${prefixCls}-finish-icon`}  />,\r\n        error: <Icon icon={\"check\"} theme=\"primary\"  className={`${prefixCls}-error-icon`} />\r\n     }\r\n     const stepsClassName = classnames(\r\n         className,\r\n     )\r\n    return (\r\n        <RCSteps\r\n            type={type} \r\n            icons={icons}\r\n            style={style}\r\n            className={stepsClassName}\r\n            initial={initial}\r\n            direction={direction}\r\n            current={current}\r\n            size={size}\r\n            labelPlacement={labelPlacement}\r\n            status={status}\r\n            onChange={  (current) => onChange!(current) }\r\n        >\r\n            {\r\n                children\r\n            }\r\n        </RCSteps>\r\n    )\r\n}\r\n\r\n\r\nSteps.Step = RCSteps.Step;\r\n\r\nexport default Steps;","D:\\社招项目\\jh-ui-tshook\\src\\components\\Progress\\progress.tsx",["182","183"],"import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport omit from 'rc-util/lib/omit';\r\n\r\nimport Line from \"./line\";\r\nimport Circle from \"./circle\";\r\nimport Steps from \"./steps\";\r\nimport devWarning from \"../_util/devWarning\";\r\nimport { tuple } from \"../_util/type\";\r\nimport { validProgress, getSuccessPercent } from \"./util\";\r\nimport Icon from \"../Icon/icon\";\r\nconst ProgressTypes = tuple(\"line\", \"circle\", \"dashboard\");\r\nexport type ProgressType = typeof ProgressTypes[number];\r\nconst ProgressStatuses = tuple(\"normal\", \"exception\", \"active\", \"success\");\r\nexport type ProgressSize = \"default\" | \"small\";\r\nexport type StringGradients = { [percentage: string]: string };\r\ntype FromToGradients = {from: string, to: string};\r\nexport type ProgressGradient = { direction?: string } & (StringGradients | FromToGradients);\r\n\r\nexport interface SuccessProps {\r\n    percent?: number;\r\n    progress?: number;\r\n    strokeColor?: number;\r\n}\r\n\r\nexport interface ProgressProps {\r\n    prefixCls?: string;\r\n    className?: string;\r\n    style?: React.CSSProperties;\r\n    type?: ProgressType;\r\n    percent?: number;\r\n    format?: (percent?: number, successPercent?: number) => React.ReactNode;\r\n    status?: typeof ProgressStatuses[number];\r\n    showInfo?: boolean;\r\n    strokeWidth?: number;\r\n    strokeLinecap?: \"butt\" | \"square\" | \"round\";\r\n    strokeColor?: string | ProgressGradient;\r\n    trailColor?: string;\r\n    width?: number;\r\n    success?: SuccessProps;\r\n    gapDegree?: number;\r\n    gapPosition?: \"top\" | \"bottom\" | \"left\" | \"right\";\r\n    size?: ProgressSize;\r\n    steps?: number;\r\n    successPercent?: number;\r\n    direction?: string;\r\n}\r\n\r\nconst Progress:React.FC<ProgressProps> = (props) => {\r\n\r\n    const {\r\n        prefixCls = \"jh-progress\", ...restProps\r\n    } = props;\r\n\r\n    const getPercentNumber = () => {\r\n        const { percent = 0 } = props;\r\n        const successPercent = getSuccessPercent(props);\r\n        return parseInt(\r\n            successPercent !== void 0 ? successPercent.toString() : percent.toString(),\r\n            10\r\n        );\r\n    }\r\n\r\n    const getProgressStatus = () => {\r\n        const { status } = props;\r\n        if( ProgressStatuses.indexOf(status!) < 0 && getPercentNumber() >= 100 ) {\r\n            return \"success\";\r\n        }\r\n        return status || \"normal\";\r\n    }\r\n    const renderProgressInfo = (prefixCls: string, progressStatus: typeof ProgressStatuses[number]) =>{\r\n        const { showInfo = true, format, type, percent } = props;\r\n        const successPercent = getSuccessPercent(props);\r\n        if(!showInfo) return null;\r\n\r\n        let text;\r\n        const textFormatter = format ||( (percentNumber) => `${percentNumber}%`);\r\n        const isLineType = type === \"line\";\r\n        if( format || (progressStatus !== \"exception\" &&  progressStatus !== \"success\") ){\r\n            text = textFormatter(validProgress(percent), validProgress(successPercent));\r\n        }else if ( progressStatus === \"exception\" ) {\r\n            text = isLineType ?  <Icon icon=\"times\" />:<Icon icon=\"times\" /> \r\n        }else if( progressStatus === \"success\" ) {\r\n            text = isLineType ?  <Icon icon=\"check\" />:<Icon icon=\"check\" /> \r\n        }\r\n        return (\r\n            <span className={`${prefixCls}-text`} title={typeof text === \"string\" ? text : undefined}>\r\n                {text}\r\n            </span>\r\n        )\r\n    };\r\n    \r\n    const renderProgress = () => {\r\n        const {\r\n            prefixCls = \"jh-progress\", className, style, type=\"line\", steps,\r\n            strokeColor, showInfo = true, size = \"default\", \r\n        } = props;\r\n\r\n        const progressStatus = getProgressStatus();\r\n        const progressInfo = renderProgressInfo(prefixCls, progressStatus);\r\n        let progress;\r\n        if( type === \"line\" ) {\r\n            progress = steps ? (\r\n                <Steps\r\n                    {...props}\r\n                    prefixCls={prefixCls}\r\n                    steps={steps}\r\n                    strokeColor={typeof strokeColor === \"string\" ? strokeColor : undefined}\r\n                >\r\n                    {progressInfo}\r\n                </Steps>\r\n            ): (\r\n                <Line prefixCls={prefixCls} {...props}>\r\n                    {progressInfo}\r\n                </Line>\r\n            )\r\n        }else if(type === \"circle\" || type === \"dashboard\") {\r\n            progress = (\r\n                <Circle {...props} prefixCls={prefixCls} progressStatus={progressStatus}>\r\n                    {progressInfo}\r\n                </Circle>\r\n            )\r\n        }\r\n\r\n        const classString = classnames(\r\n            className,\r\n            {\r\n                [`${prefixCls}-show-info`]: !!showInfo,\r\n                [`${prefixCls}-${size}`]: !!size,\r\n                [`${prefixCls}-status-${progressStatus}`]: true\r\n            }\r\n        )\r\n\r\n        return (\r\n            <div\r\n            {...omit(restProps, [\r\n                'status',\r\n                'format',\r\n                'trailColor',\r\n                'strokeWidth',\r\n                'width',\r\n                'gapDegree',\r\n                'gapPosition',\r\n                'strokeLinecap',\r\n                'percent',\r\n                'success',\r\n                'successPercent',\r\n              ])}\r\n                className={classString}\r\n                style={style}\r\n            >\r\n                {progress}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                renderProgress()\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default Progress;\r\n","D:\\社招项目\\jh-ui-tshook\\src\\components\\_util\\type.ts",[],"D:\\社招项目\\jh-ui-tshook\\src\\components\\Progress\\util.ts",[],"D:\\社招项目\\jh-ui-tshook\\src\\components\\Progress\\circle.tsx",["184"],"import React from \"react\";\r\nimport { Circle as RCCircle } from 'rc-progress';\r\nimport classnames from \"classnames\";\r\nimport { validProgress, getSuccessPercent } from \"./util\";\r\nimport { ProgressProps } from \"./progress\";\r\n\r\nconst presetPrimaryColors = {\r\n    blue: \"#1890FF\",\r\n    green: \"green\"\r\n}\r\n\r\nexport interface CircleProps extends ProgressProps {\r\n    prefixCls?: string;\r\n    children?: React.ReactNode;\r\n    progressStatus?: string;\r\n}\r\nfunction getPercentage({ percent, success, successPercent }: CircleProps) {\r\n    const ptg = validProgress(percent);\r\n    const realSuccessPercent = getSuccessPercent({ success, successPercent });\r\n    if (!realSuccessPercent) {\r\n      return ptg;\r\n    }\r\n    return [\r\n      validProgress(realSuccessPercent),\r\n      validProgress(ptg - validProgress(realSuccessPercent)),\r\n    ];\r\n  }\r\nconst getStrokeColor = ({success, strokeColor, successPercent}: CircleProps) => {\r\n    const color = strokeColor || null;\r\n    const realSuccessPercent = getSuccessPercent({success, successPercent});\r\n    if(!realSuccessPercent) return color;\r\n\r\n    return [ presetPrimaryColors.blue, color ];\r\n};\r\n\r\nconst Circle: React.FC<CircleProps> = (props) => {\r\n    const {\r\n        prefixCls = \"jh-progress\", \r\n        width,\r\n        strokeWidth,\r\n        trailColor,\r\n        strokeLinecap,\r\n        gapPosition,\r\n        gapDegree,\r\n        type,\r\n        children,\r\n    } = props;\r\n    const circleSize = width || 120;\r\n    const circleStyle = {\r\n      width: circleSize,\r\n      height: circleSize,\r\n      fontSize: circleSize * 0.15 + 6,\r\n    } as React.CSSProperties;\r\n    const circleWidth = strokeWidth || 6;\r\n  const gapPos = gapPosition || (type === 'dashboard' && 'bottom') || 'top';\r\n  const getGapDegree = () => {\r\n    // Support gapDeg = 0 when type = 'dashboard'\r\n    if (gapDegree || gapDegree === 0) {\r\n      return gapDegree;\r\n    }\r\n    if (type === 'dashboard') {\r\n      return 75;\r\n    }\r\n    return undefined;\r\n  };\r\n    const strokeColor = getStrokeColor(props) as string | string[] | object;\r\n    const isGradient = Object.prototype.toString.call(strokeColor) === \"[object Object]\"\r\n    const wrapperClassName = classnames(`${prefixCls}-inner`, {\r\n        [`${prefixCls}-circle-gradient`]: isGradient\r\n    });\r\n\r\n    return (\r\n        <div \r\n            className={wrapperClassName} \r\n        >\r\n            <RCCircle\r\n                 percent={getPercentage(props)}\r\n                 strokeWidth={circleWidth}\r\n                 trailWidth={circleWidth}\r\n                 strokeColor={strokeColor}\r\n                 strokeLinecap={strokeLinecap}\r\n                 trailColor={trailColor}\r\n                 prefixCls={prefixCls}\r\n                 gapDegree={getGapDegree()}\r\n                 gapPosition={gapPos}\r\n            />\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Circle;","D:\\社招项目\\jh-ui-tshook\\src\\components\\Progress\\line.tsx",[],"D:\\社招项目\\jh-ui-tshook\\src\\components\\Progress\\steps.tsx",[],"D:\\社招项目\\jh-ui-tshook\\src\\components\\Radio\\radio.tsx",["185"],"import React from \"react\";\r\nimport classnames from \"classnames\";\r\n\r\nexport interface RadioInterface {\r\n\r\n    prefixCls?: string;\r\n    checked?: boolean;\r\n    defaultChecked?: boolean;\r\n    autoFocus?: boolean;\r\n    disabled?: boolean;\r\n    value?: any;\r\n    children?: string | React.ReactNode;\r\n    name?: string;\r\n    id?: string,\r\n    className?: string;\r\n    style?: React.CSSProperties;\r\n    onChange?: (ev: React.SyntheticEvent, value: any ) => void;\r\n\r\n    index?: string\r\n    buttonStyle?: string;\r\n    _onClickRadio?:(index: string | undefined) => {},\r\n    defaultValue?: any;\r\n    _value?: any;\r\n    _disabled?: boolean;\r\n    _name?: string;\r\n    _selected?: boolean;\r\n    _onChange?: (ev: React.SyntheticEvent | undefined) => void;\r\n}\r\n\r\nconst Radio: React.FC<RadioInterface> = (props) => {\r\n\r\n\r\n    const {\r\n        prefixCls = \"jh-radio\", children, name, id, defaultChecked = false, style,\r\n        className ,checked, disabled = false, autoFocus = false, onChange = () =>{} ,\r\n        index, buttonStyle, _onClickRadio, defaultValue, value,\r\n        _disabled, _name, _selected\r\n    } = props;\r\n    let _defaultChecked = ( defaultValue && value && defaultValue === value );\r\n\r\n    const classNames  = classnames( \r\n            className,\r\n           {\r\n            [`${prefixCls}-defaultChecked`]: _defaultChecked || !!defaultChecked,\r\n            [`${prefixCls}-checked`]: _selected || _defaultChecked || !!checked,\r\n            [`${prefixCls}-disabled`]: _disabled || !!disabled,\r\n            [`${prefixCls}-autoFocus`]: !!autoFocus,\r\n            [`${prefixCls}-${buttonStyle}`]: !!buttonStyle\r\n           }\r\n\r\n         );\r\n    return (\r\n        <label \r\n            key={index} \r\n            className={`${prefixCls}-wrapper`}\r\n            onClick = { () => _onClickRadio!(index) }\r\n        >\r\n            <span  \r\n                className={classNames}             \r\n            >\r\n                <input \r\n                    type=\"radio\"\r\n                    name={_name || name}\r\n                    id={id}\r\n                    defaultChecked={ _defaultChecked || defaultChecked}\r\n                    checked={_selected || checked}\r\n                    disabled={ _disabled || disabled}\r\n                    autoFocus={autoFocus}\r\n                    // onChange={ (ev) => onChange(ev, { value: children, checked: !checked,disabled ,defaultChecked}) }\r\n                    onChange={ (ev: React.SyntheticEvent) => props._onChange!(ev) }\r\n                    style={ style }\r\n                    className={ classnames({\r\n                        [`${prefixCls}-input-disable`]: _disabled || !!disabled\r\n                    }) }\r\n                />\r\n            </span>\r\n            <span className={ classnames({\r\n                [`${prefixCls}-text`]: true,\r\n                [`${prefixCls}-text-disable`]: _disabled || !!disabled\r\n            }) }>\r\n                {\r\n                    children\r\n                }\r\n            </span>\r\n        </label>\r\n    )\r\n}\r\n\r\nRadio.displayName = \"Radio\";\r\n\r\nexport default Radio;","D:\\社招项目\\jh-ui-tshook\\src\\components\\Radio\\radio-button.tsx",["186"],"import React from \"react\";\r\nimport classnames from \"classnames\";\r\n\r\nexport interface RadioButtonProps{\r\n    prefixCls?: string;\r\n    checked?: boolean;\r\n    defaultChecked?: boolean;\r\n    autoFocus?: boolean;\r\n    disabled?: boolean;\r\n    value?: any;\r\n    children?: string | React.ReactNode;\r\n    name?: string;\r\n    id?: string,\r\n    className?: string;\r\n    style?: React.CSSProperties;\r\n    onChange?: (ev: React.SyntheticEvent, value: any ) => void;\r\n\r\n    index?: string;\r\n    buttonStyle?: string;\r\n    _onClickRadio?: (index: string | undefined) => void;\r\n    defaultValue?: any;\r\n    _value?: any;\r\n    _disabled?: boolean;\r\n    _name?: string;\r\n    _selected?:boolean;\r\n    _onChange?: (ev: React.SyntheticEvent) => void; \r\n    _size?: \"small\" | \"default\" | \"large\";\r\n}\r\n\r\nconst RadioButton: React.FC<RadioButtonProps> = (props) => {\r\n\r\n    const {\r\n        prefixCls = \"jh-radio-button\", checked, disabled, className, style,\r\n        children, name, id, defaultChecked, autoFocus, onChange = () =>{},\r\n\r\n        index, buttonStyle, _onClickRadio, defaultValue, value, _disabled,\r\n        _name, _selected, _size=\"default\"\r\n    } = props;\r\n    let _defaultChecked = ( defaultValue && value && defaultValue === value );\r\n    const labelClassNames = classnames(className,{\r\n        [`${prefixCls}-wrapper`]: true,\r\n        [`${prefixCls}-wrapper-checked`]: _selected || _defaultChecked || !!checked,\r\n        [`${prefixCls}-wrapper-disabled`]: _disabled || !!disabled,\r\n        [`${prefixCls}-${_size}`]: !!_size,\r\n    });\r\n    const inputWrapperClassNames = classnames({\r\n        [`${prefixCls}`]: true,\r\n        [`${prefixCls}-checked`]: _selected || _defaultChecked || !!checked,\r\n        [`${prefixCls}-disabled`]: _disabled || !!disabled,\r\n        [`${prefixCls}-${buttonStyle}`]: !!buttonStyle,\r\n\r\n    })\r\n    const textClassNames  = classnames({\r\n        [`${prefixCls}-text`]: true,\r\n        [`${prefixCls}-text-checked`]:_selected || _defaultChecked || !!checked,\r\n        [`${prefixCls}-text-disabled`]: _disabled || !!disabled,\r\n        [`${prefixCls}-text-${buttonStyle}`]: !!buttonStyle\r\n    })\r\n    console.log(\"_size\", _size)\r\n    return (\r\n        <label\r\n            className={ labelClassNames }\r\n            style={style}\r\n            key={index}\r\n            onClick = { () => _onClickRadio!(index) }\r\n\r\n        >\r\n            <span className={inputWrapperClassNames}>\r\n                <input \r\n                    type=\"radio\"\r\n                    name={ _name || name}\r\n                    id={id}\r\n                    defaultChecked={ _defaultChecked || defaultChecked}\r\n                    checked={ _selected || checked}\r\n                    disabled={ _disabled || disabled}\r\n                    autoFocus={autoFocus}\r\n                    onChange={ (ev: React.SyntheticEvent) => props._onChange!(ev) }\r\n                    style={ style }\r\n                    className={ classnames({\r\n                        [`${prefixCls}-input`]: true,\r\n                        [`${prefixCls}-input-disabled`]: _disabled || !!disabled\r\n                    }) }\r\n                />\r\n            </span>\r\n            <span\r\n                className={\r\n                    textClassNames\r\n                }\r\n            >\r\n                {children}\r\n            </span>\r\n        </label>\r\n    )\r\n}\r\n\r\n\r\n\r\nRadioButton.displayName = \"RadioButton\";\r\nexport default RadioButton;\r\n","D:\\社招项目\\jh-ui-tshook\\src\\components\\Radio\\radio-group.tsx",["187"],"import React, { useState } from \"react\";\r\nimport classnames from \"classnames\";\r\nimport devWarning from \"../_util/devWarning\";\r\n\r\ntype OptionType = Array<{label?: string | undefined, value?: string |undefined , disabled?: boolean | undefined}>\r\n\r\nexport interface RadioGroupProps {\r\n    prefixCls?: string;\r\n    buttonStyle?: \"outline\" | \"solid\";\r\n    defaultValue?: any;\r\n    disabled?: boolean;\r\n    name?: string;\r\n    options?: string[] | OptionType;\r\n    optionType?: \"default\" | \"button\";\r\n    size?: \"large\" | \"default\" | \"small\";\r\n    value?: any;\r\n    onChange?: (ev: React.SyntheticEvent ) => void;\r\n    className?: string;\r\n    children?: any\r\n}\r\n\r\nconst RadioGroup: React.FC<RadioGroupProps> = (props) => {\r\n\r\n    const [selected, setSelected] = useState(-1); \r\n\r\n    const _onClickRadio = (index: string) => {\r\n        if( selected.toString() !== index ) {\r\n            setSelected( parseInt(index, 10 ) );\r\n        }\r\n    }\r\n    const renderChild = (props: RadioGroupProps) => {\r\n        return React.Children.map(props.children, (child, index)=>{\r\n            const childElement = child as React.FunctionComponentElement<any>;\r\n\r\n            const displayName = childElement?.type?.displayName;\r\n            if(!childElement) {\r\n                devWarning(\r\n                    true,\r\n                    \"RadioGroup\",\r\n                    \"Component exist not children\"\r\n                )\r\n            }\r\n            let _optionValue, _optionLabel, _optionDisabled;\r\n            if(props?.options?.length! > 0) {\r\n                if(Object.prototype.toString.call(props?.options![0]) === \"[object Object]\") {\r\n                    _optionValue = (props?.options?.[index] as any).value;\r\n                    _optionLabel = (props?.options?.[index] as any).label;\r\n                    _optionDisabled = (props?.options?.[index] as any).value;\r\n\r\n                }else {\r\n                    _optionValue = props?.options![index];\r\n                }\r\n            }\r\n\r\n            if( displayName === \"Radio\" ) {\r\n               return React.cloneElement(childElement,{\r\n                   index: index.toString(),\r\n                   buttonStyle: props.buttonStyle || \"outline\",\r\n                   _onClickRadio:_onClickRadio,\r\n                   defaultValue: props.defaultValue,\r\n                   _value:  _optionValue || (props.value),\r\n                   _onChange: props.onChange || (() => {}),\r\n                    _disabled: _optionDisabled || props.disabled,\r\n                    _name: props.name,\r\n                    _selected: selected === index,\r\n               });\r\n            }else if(displayName === \"RadioButton\") {\r\n                return React.cloneElement(childElement,{\r\n                    index: index.toString(),\r\n                    buttonStyle: props.buttonStyle || \"outline\",\r\n                    _onClickRadio:_onClickRadio,\r\n                    defaultValue: props.defaultValue,\r\n                    _value: _optionValue|| props.value,\r\n                   _onChange: props.onChange || (() => {}),\r\n                    _disabled: _optionDisabled || props.disabled,\r\n                    _name: props.name,\r\n                    _selected: selected === index,\r\n                    _size: props.size\r\n                });\r\n            }else {\r\n                console.error(\"Radio-Group Component child element must be Radio or Radio-button\");\r\n            }\r\n\r\n        });\r\n    };\r\n\r\n    const {\r\n        buttonStyle = \"outline\", prefixCls = \"jh-radio-group\"\r\n    } = props;\r\n    const radioGroupClassNames = classnames(\r\n        {\r\n            [`${prefixCls}`]: true,\r\n            [`${prefixCls}-${buttonStyle}`]: !!buttonStyle\r\n        }\r\n    )\r\n    return (\r\n        <div className={radioGroupClassNames}>\r\n            {\r\n                renderChild(props)\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default RadioGroup;","D:\\社招项目\\jh-ui-tshook\\src\\components\\Checkbox\\checkbox.tsx",["188","189"],"import React, { useState } from \"react\";\r\nimport classnames from \"classnames\";\r\nimport RcCheckbox from \"rc-checkbox\";\r\n\r\ninterface CheckboxProps {\r\n    prefixCls?: string;\r\n    defaultChecked?: boolean;\r\n    checked?: boolean | undefined;\r\n    disabled?: boolean;\r\n    indeterminate?: boolean;\r\n    autoFocus?: boolean;\r\n    onChange?: (ev:React.SyntheticEvent, checkedValue: any) =>  void;\r\n    className?: string;\r\n    name?: string;\r\n    style?: React.CSSProperties;\r\n    label?: string | React.ReactNode;\r\n    children?: React.ReactNode;\r\n\r\n    key?: number;\r\n    _defaultValue?: boolean;\r\n    _disabled?: boolean;\r\n    _value?: boolean[];\r\n}\r\n\r\nconst Checkbox: React.FC<CheckboxProps> = (props) => {\r\n\r\n    const [_checked, _setChecked] = useState( props.checked || false );\r\n    const {\r\n        prefixCls = \"jh-checkbox\", label, children, className, style,\r\n        defaultChecked = false, checked , onChange = () => {},\r\n        disabled = false,\r\n        key, name, _defaultValue, _disabled, _value\r\n    } = props;\r\n    const checkboxWrapperClassnames = classnames({\r\n        [`${prefixCls}-wrapper`]: true,\r\n        [`${prefixCls}-wrapper-checked`]: !!checked,\r\n        [`${prefixCls}-wrapper-disabled`]: _disabled || disabled,\r\n    })\r\n    const checkboxClassName = classnames({\r\n        className,\r\n        [`${prefixCls}`]: true,\r\n        [`${prefixCls}-checked`]: !!checked,\r\n        [`${prefixCls}-disabled`]:_disabled || disabled,\r\n\r\n    })\r\n    const _onChange = (ev: any, _checked:any) => {\r\n        _setChecked(!_checked);\r\n        if( props.onChange ) {\r\n            props?.onChange!(ev, _checked);\r\n        }\r\n    }\r\n   \r\n    return (\r\n        <label\r\n            className={checkboxWrapperClassnames}\r\n            key={key}\r\n        >\r\n            <RcCheckbox \r\n                className={checkboxClassName}\r\n                style={style}\r\n                defaultChecked={ _defaultValue || defaultChecked}\r\n                checked={ _checked}\r\n                onChange = { (ev) => _onChange(ev, _checked) }\r\n                disabled={disabled}\r\n                name={name}\r\n            />\r\n           <span className={`${prefixCls}-text`}>\r\n                {\r\n                    label && <span>{label}</span>\r\n                }\r\n                {\r\n                    children && <span>{children}</span>\r\n                }\r\n           </span>\r\n        </label>\r\n    )\r\n}\r\n\r\n\r\nCheckbox.displayName = \"Checkbox\";\r\nexport default Checkbox;","D:\\社招项目\\jh-ui-tshook\\src\\components\\Checkbox\\checkbox-group.tsx",[],"D:\\社招项目\\jh-ui-tshook\\src\\components\\Switch\\switch.tsx",["190"],"import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport Icon from \"../Icon/icon\";\r\n\r\nexport interface SwitchProps {\r\n    autoFocus?: boolean;\r\n    checked?: boolean;\r\n    checkedChildren?: React.ReactNode;\r\n    className?: string;\r\n    defaultChecked?: boolean;\r\n    disabled?: boolean;\r\n    loading?: boolean;\r\n    size?: \"small\" | \"default\";\r\n    unCheckedChildren?: React.ReactNode;\r\n    onChange?: (checked?:boolean, event?: Event) => void;\r\n    onClick?: (checked?:boolean, event?: Event) => void;\r\n    style?: React.CSSProperties;\r\n    prefixCls?: string;\r\n}\r\n\r\nconst Switch: React.FC<SwitchProps> = (props) => {\r\n\r\n    const {\r\n        prefixCls = \"jh-switch\", checked, disabled, size, style,\r\n        checkedChildren,  unCheckedChildren, defaultChecked, loading\r\n    } = props;\r\n\r\n    const switchClassName = classnames({\r\n        [`${prefixCls}`]: true,\r\n        [`${prefixCls}-checked`]: !!checked || defaultChecked,\r\n        [`${prefixCls}-disabled`]: !!disabled,\r\n        [`${prefixCls}-${size}`]: size\r\n    })\r\n\r\n    const _onChange = (ev) => {\r\n\r\n        props?.onChange?.(!checked, ev);\r\n    }\r\n    const LoadingIcon = <Icon icon=\"spinner\" />\r\n    return (\r\n        <button \r\n            type=\"button\" \r\n            role=\"switch\" \r\n            className={switchClassName}\r\n            style={style}\r\n            onClick={ (ev) => _onChange(ev) }\r\n            disabled={disabled}\r\n        >\r\n            <div className={\r\n                classnames({\r\n                    [`${prefixCls}-handle`]: true,\r\n                    [`${prefixCls}-handle-small`]: size,\r\n                    [`${prefixCls}-handle-checked`]: !!checked || defaultChecked\r\n                })\r\n            }>\r\n                <div className={`${prefixCls}-loading`}>\r\n                    {\r\n                       loading ? LoadingIcon : \"\"\r\n                    }\r\n                </div>\r\n            </div>\r\n            <span className={classnames({\r\n                [`${prefixCls}-inner`]: true,\r\n                [`${prefixCls}-inner-checked`]: !!checked || defaultChecked\r\n            })}>\r\n                {\r\n                    (checked || defaultChecked) ? checkedChildren : unCheckedChildren\r\n                }\r\n            </span>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Switch;","D:\\社招项目\\jh-ui-tshook\\src\\components\\Rate\\rate.tsx",["191"],{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","severity":1,"message":"197","line":8,"column":8,"nodeType":"198","messageId":"199","endLine":8,"endColumn":12},{"ruleId":"196","severity":1,"message":"200","line":9,"column":8,"nodeType":"198","messageId":"199","endLine":9,"endColumn":12},{"ruleId":"196","severity":1,"message":"201","line":10,"column":8,"nodeType":"198","messageId":"199","endLine":10,"endColumn":15},{"ruleId":"196","severity":1,"message":"202","line":60,"column":9,"nodeType":"198","messageId":"199","endLine":60,"endColumn":21},{"ruleId":"196","severity":1,"message":"203","line":39,"column":12,"nodeType":"198","messageId":"199","endLine":39,"endColumn":19},{"ruleId":"196","severity":1,"message":"204","line":23,"column":34,"nodeType":"198","messageId":"199","endLine":23,"endColumn":39},{"ruleId":"192","replacedBy":"205"},{"ruleId":"194","replacedBy":"206"},{"ruleId":"207","severity":1,"message":"208","line":47,"column":7,"nodeType":"209","endLine":47,"endColumn":9,"suggestions":"210"},{"ruleId":"207","severity":1,"message":"211","line":38,"column":7,"nodeType":"209","endLine":38,"endColumn":15,"suggestions":"212"},{"ruleId":"196","severity":1,"message":"213","line":1,"column":8,"nodeType":"198","messageId":"199","endLine":1,"endColumn":13},{"ruleId":"196","severity":1,"message":"214","line":28,"column":88,"nodeType":"198","messageId":"199","endLine":28,"endColumn":96},{"ruleId":"215","severity":1,"message":"216","line":5,"column":1,"nodeType":"217","endLine":7,"endColumn":2},{"ruleId":"218","severity":1,"message":"219","line":59,"column":13,"nodeType":"220","endLine":59,"endColumn":53},{"ruleId":"218","severity":1,"message":"219","line":73,"column":13,"nodeType":"220","endLine":73,"endColumn":53},{"ruleId":"196","severity":1,"message":"221","line":101,"column":13,"nodeType":"198","messageId":"199","endLine":101,"endColumn":21},{"ruleId":"196","severity":1,"message":"222","line":104,"column":13,"nodeType":"198","messageId":"199","endLine":104,"endColumn":22},{"ruleId":"196","severity":1,"message":"223","line":3,"column":8,"nodeType":"198","messageId":"199","endLine":3,"endColumn":12},{"ruleId":"196","severity":1,"message":"224","line":8,"column":8,"nodeType":"198","messageId":"199","endLine":8,"endColumn":18},{"ruleId":"196","severity":1,"message":"225","line":52,"column":9,"nodeType":"198","messageId":"199","endLine":52,"endColumn":18},{"ruleId":"196","severity":1,"message":"226","line":49,"column":11,"nodeType":"198","messageId":"199","endLine":49,"endColumn":22},{"ruleId":"196","severity":1,"message":"227","line":35,"column":66,"nodeType":"198","messageId":"199","endLine":35,"endColumn":74},{"ruleId":"196","severity":1,"message":"227","line":34,"column":56,"nodeType":"198","messageId":"199","endLine":34,"endColumn":64},{"ruleId":"196","severity":1,"message":"228","line":47,"column":21,"nodeType":"198","messageId":"199","endLine":47,"endColumn":33},{"ruleId":"196","severity":1,"message":"227","line":30,"column":43,"nodeType":"198","messageId":"199","endLine":30,"endColumn":51},{"ruleId":"196","severity":1,"message":"229","line":32,"column":46,"nodeType":"198","messageId":"199","endLine":32,"endColumn":52},{"ruleId":"230","severity":1,"message":"231","line":43,"column":13,"nodeType":"232","endLine":43,"endColumn":26},{"ruleId":"196","severity":1,"message":"225","line":28,"column":9,"nodeType":"198","messageId":"199","endLine":28,"endColumn":18},"no-native-reassign",["233"],"no-negated-in-lhs",["234"],"@typescript-eslint/no-unused-vars","'Menu' is defined but never used.","Identifier","unusedVar","'Item' is defined but never used.","'SubMenu' is defined but never used.","'handleChange' is assigned a value but never used.","'clicked' is assigned a value but never used.","'title' is assigned a value but never used.",["233"],["234"],"react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'props.afterClose' and 'props.onClose'. Either include them or remove the dependency array.","ArrayExpression",["235"],"React Hook useMemo has a missing dependency: 'style'. Either include it or remove the dependency array.",["236"],"'React' is defined but never used.","'children' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'disabled' is assigned a value but never used.","'showTotal' is assigned a value but never used.","'omit' is defined but never used.","'devWarning' is defined but never used.","'prefixCls' is assigned a value but never used.","'circleStyle' is assigned a value but never used.","'onChange' is assigned a value but never used.","'_optionLabel' is assigned a value but never used.","'_value' is assigned a value but never used.","jsx-a11y/role-has-required-aria-props","Elements with the ARIA role \"switch\" must have the following attributes defined: aria-checked","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},"Update the dependencies array to be: [props.afterClose, props.onClose]",{"range":"241","text":"242"},"Update the dependencies array to be: [gutter, style]",{"range":"243","text":"244"},[1376,1378],"[props.afterClose, props.onClose]",[1037,1045],"[gutter, style]"]