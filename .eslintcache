[{"D:\\社招项目\\jh-ui-tshook\\src\\index.tsx":"1","D:\\社招项目\\jh-ui-tshook\\src\\reportWebVitals.ts":"2","D:\\社招项目\\jh-ui-tshook\\src\\App.tsx":"3","D:\\社招项目\\jh-ui-tshook\\src\\components\\Button\\button.tsx":"4","D:\\社招项目\\jh-ui-tshook\\src\\components\\Icon\\icon.tsx":"5","D:\\社招项目\\jh-ui-tshook\\src\\components\\Menu\\menu.tsx":"6","D:\\社招项目\\jh-ui-tshook\\src\\components\\Menu\\components\\item.tsx":"7","D:\\社招项目\\jh-ui-tshook\\src\\components\\Menu\\components\\subMenu.tsx":"8","D:\\社招项目\\jh-ui-tshook\\src\\components\\Alert\\alert.tsx":"9"},{"size":508,"mtime":1608456437879,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":1608109138662,"results":"12","hashOfConfig":"11"},{"size":2496,"mtime":1612277494122,"results":"13","hashOfConfig":"11"},{"size":3436,"mtime":1612192031149,"results":"14","hashOfConfig":"11"},{"size":892,"mtime":1612192012184,"results":"15","hashOfConfig":"11"},{"size":3990,"mtime":1609582579179,"results":"16","hashOfConfig":"11"},{"size":1500,"mtime":1609580671399,"results":"17","hashOfConfig":"11"},{"size":2613,"mtime":1609581992770,"results":"18","hashOfConfig":"11"},{"size":3663,"mtime":1612323632017,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1fidxgy",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"35"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\社招项目\\jh-ui-tshook\\src\\index.tsx",[],["43","44"],"D:\\社招项目\\jh-ui-tshook\\src\\reportWebVitals.ts",[],"D:\\社招项目\\jh-ui-tshook\\src\\App.tsx",["45","46","47","48"],"import React from 'react';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport {  fas } from '@fortawesome/free-solid-svg-icons'\n\n\nimport Button from \"./components/Button/button\";\nimport Icon from \"./components/Icon/icon\";\nimport Menu from \"./components/Menu/menu\";\nimport Item from \"./components/Menu/components/item\";\nimport SubMenu from \"./components/Menu/components/subMenu\";\nimport Alert from \"./components/Alert/alert\";\nimport TextLoop from 'react-text-loop';\n\nlibrary.add( fas );//添加所有种类的图标(不用一个个的进行引入)\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       \n      <Button>原始按钮</Button>\n      <Icon \n        icon='coffee' \n        theme=\"primary\"\n      />\n      \n\n      {/* <Menu \n        mode=\"vertical\"  \n        // mode=\"horizontal\"\n        style={{ width:\"200px\" }} \n        defaultOpenKeys={ [\"0\",\"1\"] }\n        openKeys={ [\"0\",\"2\"] }\n        defaultSelectedKeys=\"0-1\"\n      >\n        <SubMenu title=\"title1\" key=\"2222\">\n          <Item key={\"1\"} >1111</Item>\n          <Item danger={true} key={\"2\"}>2222</Item>\n          <Item disabled={true} key={\"3\"}>3333</Item>\n        </SubMenu>\n\n        <SubMenu title=\"title2\">\n          <Item key={\"1\"} >444</Item>\n          <Item danger={true} key={\"2\"}>5555</Item>\n          <Item disabled={true} key={\"3\"}>6666</Item>\n        </SubMenu>\n\n        <SubMenu title=\"title3\">\n          <Item key={\"1\"} >777</Item>\n          <Item danger={true} key={\"2\"}>888</Item>\n          <Item disabled={true} key={\"3\"}>999</Item>\n        </SubMenu>\n      </Menu> */}\n\n      <Alert  message=\"message\"  closable={true} onClose={ ()=>console.log(22222) } closeText=\"closeText\"  description=\"Error Description Error Description Error Description Error Description\"/>\n      <Alert type=\"success\"  message=\"message\" closeText=\"closeText\"  description=\"Error Description Error Description Error Description Error Description\" />\n      <Alert type=\"info\" message={\"info\" } loopMessage={[ \"aaa\",\"bbb\" ]} />\n      <Alert type=\"error\" message=\"message\" />\n\n     <Button btnType=\"default\" size=\"small\" danger={true} disabled={true}  shape=\"circle\">default</Button>\n     <Button btnType=\"primary\" size=\"middle\" danger={true} disabled={true} shape=\"round\"  >primary</Button>\n     <Button btnType=\"dashed\" size=\"large\">dashed</Button>\n     <Button btnType=\"text\">text</Button>\n     <Button btnType=\"ghost\">ghost</Button>\n     <Button btnType=\"link\">link</Button>\n\n    </div>\n  );\n}\n\nexport default App;\n","D:\\社招项目\\jh-ui-tshook\\src\\components\\Button\\button.tsx",["49"],"import React,{ useState } from \"react\";\r\nimport classnames from \"classnames\";\r\n\r\n\r\nexport type ButtonShape = \"circle\" | \"round\";\r\nexport type ButtonSize = \"large\" | \"middle\" | \"small\";\r\nexport type ButtonType = \"primary\" | \"ghost\" | \"dashed\" | \"link\" | \"text\" | \"default\";\r\nexport type ButtonHtmlType = \"submit\" | \"button\" | \"reset\";\r\n\r\n\r\ninterface BaseButtonProps {\r\n    className?:string;\r\n    block?:boolean;\r\n    danger?:boolean;\r\n    disabled?:boolean;\r\n    ghost?:boolean;\r\n    href?:string;\r\n    htmlType: ButtonHtmlType;\r\n    icon?:React.ReactNode;\r\n    loading?:boolean | { delay?:number };\r\n    shape?:ButtonShape;\r\n    size?:ButtonSize;\r\n    target?:string;\r\n    btnType?:ButtonType;\r\n    children?:React.ReactNode;\r\n    onClick?:()=>void;\r\n}\r\n\r\n//标签类型组合\r\nexport type AnchorButtonProps = BaseButtonProps & React.AnchorHTMLAttributes<HTMLElement>;\r\n//button标签组合\r\nexport type NativeButtonProps = BaseButtonProps & React.ButtonHTMLAttributes<HTMLButtonElement>\r\n//加Partial的原因是因为AnchorButtonProp和NativeButtonProps是可能发生类型冲突\r\nexport type ButtonProps = Partial<AnchorButtonProps & NativeButtonProps>;\r\n\r\nconst Button:React.FC<ButtonProps> = (props)=>{\r\n\r\n\r\n    const [clicked,setClicked] = useState<boolean>( false );\r\n\r\n    //解构属性\r\n    const {\r\n        className,block,danger,disabled,ghost,href,htmlType,icon,loading,shape,size,\r\n        btnType  ,children,...restProps\r\n    } = props;\r\n    const iconNode = typeof icon === \"string\" ?  icon : null;\r\n\r\n    //合并类名，为所传得属性调整为相应得样式,\r\n    //prefixCls为定义常规属性，className为外部传入的类名,{}则为传入的props属性需要改变对应的样式\r\n    const prefixCls = \"btn\";\r\n    const classes = classnames(prefixCls,className,{\r\n        [`btn-${btnType}`]:btnType,\r\n        [`btn-${size}`]:size,\r\n        [`btn-block`]:block,\r\n        [`btn-danger`]:danger,\r\n        [`btn-disabled`]:disabled,\r\n        [`btn-${shape}`]:shape\r\n    })\r\n\r\n    const handleClick:React.MouseEventHandler< HTMLButtonElement | HTMLAnchorElement  > = (e)=>{\r\n        //防止fast-click类似于fastclick.js\r\n        let timer\r\n        setClicked( true );\r\n        clearTimeout( timer  );\r\n        timer = window.setTimeout( ()=>setClicked(false),500 );\r\n\r\n        const onClick = props.onClick;\r\n        if( onClick ) {\r\n            (onClick as React.MouseEventHandler< HTMLButtonElement | HTMLAnchorElement > )(e);\r\n        }\r\n    }\r\n\r\n\r\n    //判断是a标签还是button标签\r\n    if(  btnType === \"link\" && href ) {\r\n        return (\r\n            <a\r\n                className={classes}\r\n                href={href}\r\n                onClick={ (ev)=>handleClick(ev) }\r\n                {...restProps}\r\n            >\r\n                {\r\n                    children\r\n                }\r\n            </a>\r\n        )\r\n    }else {\r\n        return (\r\n            <button\r\n                className={classes}\r\n                disabled={disabled}\r\n                type={ htmlType || \"button\" }\r\n                onClick={ (ev)=>handleClick(ev) }\r\n                {...restProps}\r\n            >\r\n               {iconNode} {children}\r\n            </button>\r\n        )\r\n    }  \r\n}\r\n\r\nButton.defaultProps = {\r\n    disabled:false,\r\n    btnType:\"default\",\r\n    size:\"middle\",\r\n    block:false,\r\n    danger:false,\r\n}\r\nButton.displayName=\"Button\";\r\n\r\nexport default Button;\r\n\r\n\r\n//暂缺loading\r\n\r\n\r\n\r\n\r\n","D:\\社招项目\\jh-ui-tshook\\src\\components\\Icon\\icon.tsx",[],"D:\\社招项目\\jh-ui-tshook\\src\\components\\Menu\\menu.tsx",[],["50","51"],"D:\\社招项目\\jh-ui-tshook\\src\\components\\Menu\\components\\item.tsx",["52"],"import React, { useContext } from \"react\";\r\nimport classnames from \"classnames\";\r\n\r\nimport { MenuContext,MenuContextProps } from \"../menu\";\r\n\r\nexport interface ItemProps{\r\n    danger:boolean,\r\n    disabled:boolean,\r\n    icon:React.ReactNode,\r\n    key:any,\r\n    title:string,\r\n    className:string,\r\n    style:React.CSSProperties,\r\n    index:string,\r\n\r\n}\r\n\r\n\r\nconst Item:React.FC< Partial<ItemProps> > = (props)=>{\r\n\r\n   \r\n    const {\r\n        danger,disabled,icon,key,title,className,style,index,children\r\n    } = props;\r\n    const context = useContext<MenuContextProps>( MenuContext );\r\n    const classes = classnames(\"menu-item\",className,{\r\n        [`menu-item-danger`]:danger,\r\n        [`menu-item-disabled`]:disabled,\r\n        [`menu-item-active`]:index ===  context.index,\r\n        // [`menu-item-selected`]: index ===  context.selectedKeys || index === context.defaultSelectedKeys, \r\n    })\r\n   \r\n    const handleClick = (ev:React.MouseEvent)=>{\r\n        if( !disabled  ) {\r\n            context?.onClick!( { item:children,key:index!,domEvent:ev } );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <li \r\n            key={key} \r\n            className={classes} \r\n            style={{  ...style }}\r\n            onClick={ (ev:React.MouseEvent)=>handleClick(ev) }\r\n        >\r\n            {icon}\r\n            {\r\n                children\r\n            }\r\n        </li>\r\n    )\r\n\r\n}\r\n\r\nItem.defaultProps = {\r\n    danger:false,\r\n    disabled:false\r\n}\r\nItem.displayName = \"MenuItem\";\r\n\r\nexport default Item;\r\n","D:\\社招项目\\jh-ui-tshook\\src\\components\\Menu\\components\\subMenu.tsx",[],"D:\\社招项目\\jh-ui-tshook\\src\\components\\Alert\\alert.tsx",["53"],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":8,"column":8,"nodeType":"60","messageId":"61","endLine":8,"endColumn":12},{"ruleId":"58","severity":1,"message":"62","line":9,"column":8,"nodeType":"60","messageId":"61","endLine":9,"endColumn":12},{"ruleId":"58","severity":1,"message":"63","line":10,"column":8,"nodeType":"60","messageId":"61","endLine":10,"endColumn":15},{"ruleId":"58","severity":1,"message":"64","line":12,"column":8,"nodeType":"60","messageId":"61","endLine":12,"endColumn":16},{"ruleId":"58","severity":1,"message":"65","line":39,"column":12,"nodeType":"60","messageId":"61","endLine":39,"endColumn":19},{"ruleId":"54","replacedBy":"66"},{"ruleId":"56","replacedBy":"67"},{"ruleId":"58","severity":1,"message":"68","line":23,"column":34,"nodeType":"60","messageId":"61","endLine":23,"endColumn":39},{"ruleId":"69","severity":1,"message":"70","line":47,"column":7,"nodeType":"71","endLine":47,"endColumn":9,"suggestions":"72"},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"@typescript-eslint/no-unused-vars","'Menu' is defined but never used.","Identifier","unusedVar","'Item' is defined but never used.","'SubMenu' is defined but never used.","'TextLoop' is defined but never used.","'clicked' is assigned a value but never used.",["73"],["74"],"'title' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'props.afterClose' and 'props.onClose'. Either include them or remove the dependency array.","ArrayExpression",["75"],"no-global-assign","no-unsafe-negation",{"desc":"76","fix":"77"},"Update the dependencies array to be: [props.afterClose, props.onClose]",{"range":"78","text":"79"},[1376,1378],"[props.afterClose, props.onClose]"]