[{"D:\\社招项目\\jh-ui-tshook\\src\\index.tsx":"1","D:\\社招项目\\jh-ui-tshook\\src\\reportWebVitals.ts":"2","D:\\社招项目\\jh-ui-tshook\\src\\App.tsx":"3","D:\\社招项目\\jh-ui-tshook\\src\\components\\Button\\button.tsx":"4","D:\\社招项目\\jh-ui-tshook\\src\\components\\Icon\\icon.tsx":"5","D:\\社招项目\\jh-ui-tshook\\src\\components\\Menu\\menu.tsx":"6","D:\\社招项目\\jh-ui-tshook\\src\\components\\Menu\\components\\item.tsx":"7","D:\\社招项目\\jh-ui-tshook\\src\\components\\Menu\\components\\subMenu.tsx":"8","D:\\社招项目\\jh-ui-tshook\\src\\components\\Alert\\alert.tsx":"9","D:\\社招项目\\jh-ui-tshook\\src\\components\\Grid\\Col.tsx":"10","D:\\社招项目\\jh-ui-tshook\\src\\components\\Grid\\Row.tsx":"11","D:\\社招项目\\jh-ui-tshook\\src\\components\\Grid\\grid.tsx":"12","D:\\社招项目\\jh-ui-tshook\\src\\components\\Divider\\divider.tsx":"13","D:\\社招项目\\jh-ui-tshook\\src\\components\\Space\\space.tsx":"14","D:\\社招项目\\jh-ui-tshook\\src\\components\\Breadcrumb\\breadcrumb.tsx":"15","D:\\社招项目\\jh-ui-tshook\\src\\components\\_util\\devWarning.ts":"16","D:\\社招项目\\jh-ui-tshook\\src\\components\\_util\\reactNode.ts":"17","D:\\社招项目\\jh-ui-tshook\\src\\components\\Breadcrumb\\BreadcrumbItem.tsx":"18","D:\\社招项目\\jh-ui-tshook\\src\\components\\Breadcrumb\\BreadcrumbSeparator.tsx":"19"},{"size":508,"mtime":1608456437879,"results":"20","hashOfConfig":"21"},{"size":425,"mtime":1608109138662,"results":"22","hashOfConfig":"21"},{"size":4393,"mtime":1617764789243,"results":"23","hashOfConfig":"21"},{"size":3436,"mtime":1612192031149,"results":"24","hashOfConfig":"21"},{"size":890,"mtime":1613749870200,"results":"25","hashOfConfig":"21"},{"size":3990,"mtime":1609582579179,"results":"26","hashOfConfig":"21"},{"size":1500,"mtime":1609580671399,"results":"27","hashOfConfig":"21"},{"size":2613,"mtime":1609581992770,"results":"28","hashOfConfig":"29"},{"size":3663,"mtime":1612323632017,"results":"30","hashOfConfig":"21"},{"size":1338,"mtime":1612344283873,"results":"31","hashOfConfig":"21"},{"size":1131,"mtime":1612337762124,"results":"32","hashOfConfig":"21"},{"size":210,"mtime":1612344901042,"results":"33","hashOfConfig":"21"},{"size":1057,"mtime":1612404843037,"results":"34","hashOfConfig":"21"},{"size":3201,"mtime":1612409898629,"results":"35","hashOfConfig":"21"},{"size":4611,"mtime":1617716902193,"results":"36","hashOfConfig":"21"},{"size":229,"mtime":1616572968877,"results":"37","hashOfConfig":"21"},{"size":738,"mtime":1617716600254,"results":"38","hashOfConfig":"21"},{"size":1872,"mtime":1617764455950,"results":"39","hashOfConfig":"21"},{"size":372,"mtime":1617764625387,"results":"40","hashOfConfig":"21"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"y3aesh",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"43"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"43"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1fidxgy",{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"43"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"43"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"43"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"43"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"43"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"D:\\社招项目\\jh-ui-tshook\\src\\index.tsx",[],["88","89"],"D:\\社招项目\\jh-ui-tshook\\src\\reportWebVitals.ts",[],"D:\\社招项目\\jh-ui-tshook\\src\\App.tsx",["90","91","92"],"D:\\社招项目\\jh-ui-tshook\\src\\components\\Button\\button.tsx",["93"],"import React,{ useState } from \"react\";\r\nimport classnames from \"classnames\";\r\n\r\n\r\nexport type ButtonShape = \"circle\" | \"round\";\r\nexport type ButtonSize = \"large\" | \"middle\" | \"small\";\r\nexport type ButtonType = \"primary\" | \"ghost\" | \"dashed\" | \"link\" | \"text\" | \"default\";\r\nexport type ButtonHtmlType = \"submit\" | \"button\" | \"reset\";\r\n\r\n\r\ninterface BaseButtonProps {\r\n    className?:string;\r\n    block?:boolean;\r\n    danger?:boolean;\r\n    disabled?:boolean;\r\n    ghost?:boolean;\r\n    href?:string;\r\n    htmlType: ButtonHtmlType;\r\n    icon?:React.ReactNode;\r\n    loading?:boolean | { delay?:number };\r\n    shape?:ButtonShape;\r\n    size?:ButtonSize;\r\n    target?:string;\r\n    btnType?:ButtonType;\r\n    children?:React.ReactNode;\r\n    onClick?:()=>void;\r\n}\r\n\r\n//标签类型组合\r\nexport type AnchorButtonProps = BaseButtonProps & React.AnchorHTMLAttributes<HTMLElement>;\r\n//button标签组合\r\nexport type NativeButtonProps = BaseButtonProps & React.ButtonHTMLAttributes<HTMLButtonElement>\r\n//加Partial的原因是因为AnchorButtonProp和NativeButtonProps是可能发生类型冲突\r\nexport type ButtonProps = Partial<AnchorButtonProps & NativeButtonProps>;\r\n\r\nconst Button:React.FC<ButtonProps> = (props)=>{\r\n\r\n\r\n    const [clicked,setClicked] = useState<boolean>( false );\r\n\r\n    //解构属性\r\n    const {\r\n        className,block,danger,disabled,ghost,href,htmlType,icon,loading,shape,size,\r\n        btnType  ,children,...restProps\r\n    } = props;\r\n    const iconNode = typeof icon === \"string\" ?  icon : null;\r\n\r\n    //合并类名，为所传得属性调整为相应得样式,\r\n    //prefixCls为定义常规属性，className为外部传入的类名,{}则为传入的props属性需要改变对应的样式\r\n    const prefixCls = \"btn\";\r\n    const classes = classnames(prefixCls,className,{\r\n        [`btn-${btnType}`]:btnType,\r\n        [`btn-${size}`]:size,\r\n        [`btn-block`]:block,\r\n        [`btn-danger`]:danger,\r\n        [`btn-disabled`]:disabled,\r\n        [`btn-${shape}`]:shape\r\n    })\r\n\r\n    const handleClick:React.MouseEventHandler< HTMLButtonElement | HTMLAnchorElement  > = (e)=>{\r\n        //防止fast-click类似于fastclick.js\r\n        let timer\r\n        setClicked( true );\r\n        clearTimeout( timer  );\r\n        timer = window.setTimeout( ()=>setClicked(false),500 );\r\n\r\n        const onClick = props.onClick;\r\n        if( onClick ) {\r\n            (onClick as React.MouseEventHandler< HTMLButtonElement | HTMLAnchorElement > )(e);\r\n        }\r\n    }\r\n\r\n\r\n    //判断是a标签还是button标签\r\n    if(  btnType === \"link\" && href ) {\r\n        return (\r\n            <a\r\n                className={classes}\r\n                href={href}\r\n                onClick={ (ev)=>handleClick(ev) }\r\n                {...restProps}\r\n            >\r\n                {\r\n                    children\r\n                }\r\n            </a>\r\n        )\r\n    }else {\r\n        return (\r\n            <button\r\n                className={classes}\r\n                disabled={disabled}\r\n                type={ htmlType || \"button\" }\r\n                onClick={ (ev)=>handleClick(ev) }\r\n                {...restProps}\r\n            >\r\n               {iconNode} {children}\r\n            </button>\r\n        )\r\n    }  \r\n}\r\n\r\nButton.defaultProps = {\r\n    disabled:false,\r\n    btnType:\"default\",\r\n    size:\"middle\",\r\n    block:false,\r\n    danger:false,\r\n}\r\nButton.displayName=\"Button\";\r\n\r\nexport default Button;\r\n\r\n\r\n//暂缺loading\r\n\r\n\r\n\r\n\r\n","D:\\社招项目\\jh-ui-tshook\\src\\components\\Icon\\icon.tsx",[],"D:\\社招项目\\jh-ui-tshook\\src\\components\\Menu\\menu.tsx",[],"D:\\社招项目\\jh-ui-tshook\\src\\components\\Menu\\components\\item.tsx",["94"],"import React, { useContext } from \"react\";\r\nimport classnames from \"classnames\";\r\n\r\nimport { MenuContext,MenuContextProps } from \"../menu\";\r\n\r\nexport interface ItemProps{\r\n    danger:boolean,\r\n    disabled:boolean,\r\n    icon:React.ReactNode,\r\n    key:any,\r\n    title:string,\r\n    className:string,\r\n    style:React.CSSProperties,\r\n    index:string,\r\n\r\n}\r\n\r\n\r\nconst Item:React.FC< Partial<ItemProps> > = (props)=>{\r\n\r\n   \r\n    const {\r\n        danger,disabled,icon,key,title,className,style,index,children\r\n    } = props;\r\n    const context = useContext<MenuContextProps>( MenuContext );\r\n    const classes = classnames(\"menu-item\",className,{\r\n        [`menu-item-danger`]:danger,\r\n        [`menu-item-disabled`]:disabled,\r\n        [`menu-item-active`]:index ===  context.index,\r\n        // [`menu-item-selected`]: index ===  context.selectedKeys || index === context.defaultSelectedKeys, \r\n    })\r\n   \r\n    const handleClick = (ev:React.MouseEvent)=>{\r\n        if( !disabled  ) {\r\n            context?.onClick!( { item:children,key:index!,domEvent:ev } );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <li \r\n            key={key} \r\n            className={classes} \r\n            style={{  ...style }}\r\n            onClick={ (ev:React.MouseEvent)=>handleClick(ev) }\r\n        >\r\n            {icon}\r\n            {\r\n                children\r\n            }\r\n        </li>\r\n    )\r\n\r\n}\r\n\r\nItem.defaultProps = {\r\n    danger:false,\r\n    disabled:false\r\n}\r\nItem.displayName = \"MenuItem\";\r\n\r\nexport default Item;\r\n","D:\\社招项目\\jh-ui-tshook\\src\\components\\Menu\\components\\subMenu.tsx",[],["95","96"],"D:\\社招项目\\jh-ui-tshook\\src\\components\\Alert\\alert.tsx",["97"],"import React,{ useState,useCallback } from \"react\";\r\nimport classnames from \"classnames\";\r\nimport Icon from \"../Icon/icon\";\r\nimport TextLoop from 'react-text-loop';\r\n\r\ntype typeEnum = \"success\" | \"info\" | \"warning\" | \"error\";\r\n\r\ninterface IAlertProps {\r\n    action:React.ReactNode,\r\n    afterClose:()=>void,\r\n    closable:boolean,\r\n    closeText:React.ReactNode | string,\r\n    description:React.ReactNode | string,\r\n    icon:React.ReactNode,\r\n    message:React.ReactNode | string,\r\n    showIcon:boolean,\r\n    type:typeEnum,\r\n    onClose:( e:React.MouseEvent )=>void,\r\n    loopMessage:Array<string>,\r\n    style:React.CSSProperties,\r\n    className:string,\r\n}\r\nenum IconType  {\r\n    \"success\"=\"check-circle\",\r\n    \"info\"=\"exclamation-circle\",\r\n    \"warning\"=\"exclamation-circle\",\r\n    \"error\"=\"window-close\"\r\n}\r\nenum IconColor {\r\n    \"success\"=\"#52C41A\",\r\n    \"info\"=\"#1890FF\",\r\n    \"warning\"=\"#FAAD14\",\r\n    \"error\"=\"#FF4D4F\"\r\n}\r\n\r\nconst Alert:React.FC< Omit<Partial<IAlertProps>,\"message\"> & { message:string | React.ReactNode } > = (props)=>{\r\n\r\n\r\n    const [ closed,setClosed ] = useState<boolean>(false);\r\n\r\n    const closeComponent = useCallback((e:React.MouseEvent)=>{\r\n        setClosed( true );\r\n        const onClose = props.onClose;\r\n        ( onClose! as React.MouseEventHandler )?.( e );\r\n        const afterClose = props.afterClose;\r\n        afterClose?.();\r\n    },[])\r\n\r\n    const renderLoopMessage = (loopMessage:Array<string | undefined>)=>{\r\n        return loopMessage.map( (item:string | undefined,index:number)=>{\r\n            return (\r\n                <div key={ index }>\r\n                    {\r\n                        item\r\n                    }\r\n                </div>\r\n            )\r\n        } );\r\n    }\r\n\r\n    const { \r\n        className,style,message,type=\"warning\",\r\n        closable, description,showIcon,closeText,\r\n        loopMessage=[],\r\n    } = props;\r\n    const renderLoopMessageData = renderLoopMessage(loopMessage);\r\n    const classes = classnames( \"jh-alert\",className,{\r\n        [`jh-${type}`]:true,\r\n    } )\r\n    if( !!closed ) return null;\r\n    return  ( \r\n        <div\r\n            className={ classes }\r\n            style={{ ...style }}\r\n        >  \r\n            {\r\n                !!closable &&\r\n                (\r\n                    \r\n                closeText \r\n                ? <div \r\n                    className=\"jh-alert-closable\"\r\n                    onClick={ ( e )=>closeComponent(e) }\r\n                >{closeText}</div> \r\n                :<div \r\n                    className=\"jh-alert-closable\"\r\n                    onClick={ ( e )=>closeComponent(e) }\r\n                >\r\n                    <Icon  icon=\"times\" />\r\n                </div>\r\n                )\r\n            }\r\n            {\r\n                !!showIcon && \r\n                <Icon  icon={ IconType[type] }  style={{ color:IconColor[type] }}/> \r\n            }\r\n            <div>\r\n            </div>\r\n            <div>\r\n                \r\n                {\r\n                     renderLoopMessageData.length > 0 \r\n                     ? (\r\n                         <TextLoop mask>\r\n                             {\r\n                                 renderLoopMessageData.map( (item)=>{\r\n                                     return item\r\n                                 } )\r\n                             }\r\n                         </TextLoop>\r\n                     )\r\n                     :message                   \r\n                }\r\n            </div>\r\n            <div>\r\n                {\r\n                    description\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nAlert.displayName = \"Alert\";\r\nexport default Alert;\r\n","D:\\社招项目\\jh-ui-tshook\\src\\components\\Grid\\Col.tsx",["98"],"import React,{ useContext,useMemo } from \"react\";\r\nimport classnames from \"classnames\";\r\nimport { RowContext } from \"./Row\";\r\ninterface ICol {\r\n    flex:string | number,\r\n    className:string,\r\n    style:React.CSSProperties,\r\n    offset:number,\r\n    order:number,\r\n    pull:number,\r\n    push:number,\r\n    span:number,\r\n    xs:number | object,\r\n    sm:number | object,\r\n    md:number | object,\r\n    lg:number | object,\r\n    xl:number | object,\r\n    xxl:number | object,\r\n\r\n}\r\n\r\nconst Col:React.FC< Partial<ICol> > = ( props )=>{\r\n\r\n\r\n\r\n    const {\r\n        style,className,span,offset = 0,order=0,push=0,pull=0,children\r\n    } = props;\r\n    const classes = classnames(\"jh-col\",className,{\r\n        [`jh-span-${span}`]:true,\r\n        [`jh-offset-${offset}`]:true,\r\n        [`jh-push-${push}`]:true,\r\n        [`jh-pull-${pull}`]:true\r\n    });\r\n    const { gutter } = useContext( RowContext );   \r\n    let colStyle = useMemo( ()=>{\r\n        return gutter! > 0 ?  { paddingLeft:(gutter!)/2,paddingRight:(gutter!)/2,...style } : style;\r\n    },[gutter] );  \r\n\r\n    return (\r\n            <div\r\n                className={ classes }\r\n                style={{ ...colStyle,order:order }}\r\n            >\r\n                {\r\n                    children\r\n                }\r\n            </div>\r\n    )\r\n}\r\n\r\nCol.displayName = \"Col\";\r\nexport default Col;","D:\\社招项目\\jh-ui-tshook\\src\\components\\Grid\\Row.tsx",[],"D:\\社招项目\\jh-ui-tshook\\src\\components\\Grid\\grid.tsx",["99"],"import React from \"react\";\r\nimport Row from \"./Row\";\r\nimport Col from \"./Col\";\r\nconst Grid = ()=>{\r\n    return null\r\n}\r\n\r\nGrid.Row = Row;\r\nGrid.Col = Col;\r\nGrid.displayName = \"Grid\";\r\nexport default Grid;\r\n\r\n\r\n","D:\\社招项目\\jh-ui-tshook\\src\\components\\Divider\\divider.tsx",[],"D:\\社招项目\\jh-ui-tshook\\src\\components\\Space\\space.tsx",["100"],"import React from \"react\";\r\nimport classnames from \"classnames\";\r\n\r\ntype TAlign = \"start\" | \"end\" | \"center\" | \"baseline\";\r\ntype TDirection = \"vertical\" | \"horizontal\";\r\ntype TSize = \"small\" | \"middle\" | \"large\";\r\ninterface ISpaceProp  {\r\n    align:TAlign,\r\n    direction:TDirection,\r\n    size:TSize | number,\r\n    split:React.ReactNode,\r\n    wrap:boolean,\r\n    className:string,\r\n    style:React.CSSProperties\r\n}\r\ninterface IMarginRight{\r\n    marginRight:string,\r\n    marginBottom?:string,\r\n}\r\ninterface IMarginBottom {\r\n    marginBottom:string\r\n}\r\n\r\n\r\n\r\nconst Space:React.FC< Partial<ISpaceProp> > = (props)=>{\r\n\r\n    const { align,direction=\"horizontal\",size=\"small\",split,wrap=false,className,style,children } = props;\r\n    const classes = classnames(\"jh-space\",className,{\r\n        [`jh-space-${direction}`]:true,\r\n        [`jh-space-${size}`]:true,\r\n        [`jh-space-${align}`]:true,\r\n        [`jh-space-wrap`]: wrap && direction === \"horizontal\"\r\n    })\r\n\r\n    const renderChildren = ()=>{\r\n        return React.Children.map( props.children,(child,index)=>{\r\n            let childElement = child;\r\n            let sizeType = typeof parseInt(size as any,10);\r\n            let spaceItemStyle = {};\r\n            if( sizeType === \"number\" ) {\r\n                if( direction === \"horizontal\" ) {\r\n                    ( spaceItemStyle as  IMarginRight)[\"marginRight\"] = size + \"px\";\r\n                    ( spaceItemStyle as  IMarginRight)[\"marginBottom\"] = wrap ? 8 + \"px\":\"0px\";\r\n                }else if( direction === \"vertical\" ){\r\n                    ( spaceItemStyle as IMarginBottom )[\"marginBottom\"] = size + \"px\";\r\n                }else {\r\n                    console.error(\"size property only exist 'horizontal' or 'vertical' \");\r\n                }\r\n            }else {\r\n                console.error(\"size support only string or number \");\r\n            }\r\n            if( childElement ) {\r\n                return React.cloneElement(\r\n                    childElement as any,\r\n                    { className:`jh-space-item jh-space-${size}`,style:spaceItemStyle}\r\n                )\r\n            }else {\r\n                console.error(\"Space component must exist children\");\r\n            }\r\n\r\n        } );\r\n    }\r\n    return (\r\n        <div\r\n            style={{ ...style }}\r\n            className={ classes }\r\n        >\r\n            {\r\n               split ? renderChildren()!.map( (item,index)=>{\r\n                    return (\r\n                        <div key={index}>\r\n                            {item}\r\n                            {\r\n                               direction===\"horizontal\" ? (\r\n                                <span className={`jh-space-split-${size}`}>{split}</span>\r\n                               ) :(\r\n                                   <div  className={`jh-space-split-vertical-${size}`} >{split}</div>\r\n                               )\r\n                            }\r\n                            \r\n                        </div>\r\n                    )\r\n                } ) : renderChildren()\r\n            }\r\n            {/* {\r\n                renderChildren()\r\n            } */}\r\n        </div>\r\n    )\r\n}\r\n\r\nSpace.displayName = \"Space\";\r\nexport default Space;","D:\\社招项目\\jh-ui-tshook\\src\\components\\Breadcrumb\\breadcrumb.tsx",[],"D:\\社招项目\\jh-ui-tshook\\src\\components\\_util\\devWarning.ts",["101"],"import devWarning,{ resetWarned } from \"rc-util/lib/warning\";\r\n\r\nexport { resetWarned };\r\n\r\nexport default (valid: boolean, component: string, message: string): void => {\r\n    devWarning(valid, `[jh: ${component}] ${message}`)\r\n}","D:\\社招项目\\jh-ui-tshook\\src\\components\\_util\\reactNode.ts",[],"D:\\社招项目\\jh-ui-tshook\\src\\components\\Breadcrumb\\BreadcrumbItem.tsx",[],"D:\\社招项目\\jh-ui-tshook\\src\\components\\Breadcrumb\\BreadcrumbSeparator.tsx",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":8,"column":8,"nodeType":"108","messageId":"109","endLine":8,"endColumn":12},{"ruleId":"106","severity":1,"message":"110","line":9,"column":8,"nodeType":"108","messageId":"109","endLine":9,"endColumn":12},{"ruleId":"106","severity":1,"message":"111","line":10,"column":8,"nodeType":"108","messageId":"109","endLine":10,"endColumn":15},{"ruleId":"106","severity":1,"message":"112","line":39,"column":12,"nodeType":"108","messageId":"109","endLine":39,"endColumn":19},{"ruleId":"106","severity":1,"message":"113","line":23,"column":34,"nodeType":"108","messageId":"109","endLine":23,"endColumn":39},{"ruleId":"102","replacedBy":"114"},{"ruleId":"104","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":47,"column":7,"nodeType":"118","endLine":47,"endColumn":9,"suggestions":"119"},{"ruleId":"116","severity":1,"message":"120","line":38,"column":7,"nodeType":"118","endLine":38,"endColumn":15,"suggestions":"121"},{"ruleId":"106","severity":1,"message":"122","line":1,"column":8,"nodeType":"108","messageId":"109","endLine":1,"endColumn":13},{"ruleId":"106","severity":1,"message":"123","line":28,"column":88,"nodeType":"108","messageId":"109","endLine":28,"endColumn":96},{"ruleId":"124","severity":1,"message":"125","line":5,"column":1,"nodeType":"126","endLine":7,"endColumn":2},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"@typescript-eslint/no-unused-vars","'Menu' is defined but never used.","Identifier","unusedVar","'Item' is defined but never used.","'SubMenu' is defined but never used.","'clicked' is assigned a value but never used.","'title' is assigned a value but never used.",["127"],["128"],"react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'props.afterClose' and 'props.onClose'. Either include them or remove the dependency array.","ArrayExpression",["129"],"React Hook useMemo has a missing dependency: 'style'. Either include it or remove the dependency array.",["130"],"'React' is defined but never used.","'children' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},"Update the dependencies array to be: [props.afterClose, props.onClose]",{"range":"135","text":"136"},"Update the dependencies array to be: [gutter, style]",{"range":"137","text":"138"},[1376,1378],"[props.afterClose, props.onClose]",[1037,1045],"[gutter, style]"]